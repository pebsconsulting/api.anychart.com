{
  "anychart": {
    "constant": [
      "DEFAULT_THEME",
      "DEVELOP",
      "PERFORMANCE_MONITORING",
      "VERSION"
    ],
    "functions": [
      "appendTheme (value) ",
      "area (var_args) ",
      "area3d (var_args) ",
      "bar (var_args) ",
      "bar3d (var_args) ",
      "barmekko (var_args) ",
      "box (var_args) ",
      "bubble (var_args) ",
      "bubbleMap (var_args) ",
      "bullet (opt_data, opt_csvSettings) ",
      "cartesian (opt_isVertical) ",
      "cartesian3d (opt_isVertical) ",
      "choropleth (var_args) ",
      "circularGauge (opt_data, opt_csvSettings) ",
      "column (var_args) ",
      "column3d (var_args) ",
      "connector (var_args) ",
      "financial (var_args) ",
      "fromJson (jsonConfig) ",
      "fromXml (xmlConfig) ",
      "funnel (opt_data, opt_csvSettings) ",
      "ganttProject () ",
      "ganttResource () ",
      "ganttToolbar () ",
      "getChartById (id) ",
      "heatMap (opt_data, opt_csvSettings) ",
      "hilo (var_args) ",
      "licenseKey (opt_value) ",
      "line (var_args) ",
      "map () ",
      "marker (var_args) ",
      "markerMap (var_args) ",
      "mekko (var_args) ",
      "mosaic (var_args) ",
      "onDocumentLoad (func, opt_scope) ",
      "onDocumentReady (func, opt_scope) ",
      "pareto (opt_data) ",
      "pert () ",
      "pie (opt_data, opt_csvSettings) ",
      "pie3d (opt_data, opt_csvSettings) ",
      "polar (var_args) ",
      "pyramid (opt_data, opt_csvSettings) ",
      "quadrant (var_args) ",
      "radar (var_args) ",
      "resource (opt_data, opt_csvSettings) ",
      "scatter (var_args) ",
      "scatterChart (var_args) ",
      "seatMap (var_args) ",
      "server (opt_address) ",
      "sparkline (opt_data, opt_csvSettings) ",
      "stock (opt_allowPointSettings) ",
      "tagCloud (opt_data, opt_settings) ",
      "theme (opt_value) ",
      "toolbar () ",
      "treeMap (opt_data, opt_fillMethod) ",
      "venn (opt_data, opt_csvSettings) ",
      "vertical (var_args) ",
      "verticalArea (var_args) ",
      "verticalLine (var_args) ",
      "waterfall (var_args) "
    ]
  },
  "anychart.enums.MapUnboundRegionsMode": {
    "constant": [
      "AS_IS",
      "HIDE"
    ]
  },
  "anychart.enums.HoverMode": {
    "constant": [
      "BY_SPOT",
      "BY_X"
    ]
  },
  "anychart.enums.SelectionMode": {
    "constant": [
      "DRILL_DOWN",
      "MULTI_SELECT",
      "NONE",
      "SINGLE_SELECT"
    ]
  },
  "anychart.enums.Cursor": {
    "constant": [
      "CROSSHAIR",
      "DEFAULT",
      "E_RESIZE",
      "HELP",
      "MOVE",
      "NE_RESIZE",
      "NW_RESIZE",
      "N_RESIZE",
      "POINTER",
      "SE_RESIZE",
      "SW_RESIZE",
      "S_RESIZE",
      "TEXT",
      "WAIT",
      "W_RESIZE"
    ]
  },
  "anychart.enums.Anchor": {
    "constant": [
      "AUTO",
      "CENTER",
      "CENTER_BOTTOM",
      "CENTER_TOP",
      "LEFT_BOTTOM",
      "LEFT_CENTER",
      "LEFT_TOP",
      "RIGHT_BOTTOM",
      "RIGHT_CENTER",
      "RIGHT_TOP"
    ]
  },
  "anychart.enums.Position": {
    "constant": [
      "CENTER",
      "CENTER_BOTTOM",
      "CENTER_TOP",
      "LEFT_BOTTOM",
      "LEFT_CENTER",
      "LEFT_TOP",
      "RIGHT_BOTTOM",
      "RIGHT_CENTER",
      "RIGHT_TOP"
    ]
  },
  "anychart.enums.ChartScrollerPosition": {
    "constant": [
      "AFTER_AXES",
      "BEFORE_AXES"
    ]
  },
  "anychart.enums.Align": {
    "constant": [
      "BOTTOM",
      "CENTER",
      "LEFT",
      "RIGHT",
      "TOP"
    ]
  },
  "anychart.enums.Layout": {
    "constant": [
      "HORIZONTAL",
      "VERTICAL"
    ]
  },
  "anychart.enums.LegendLayout": {
    "constant": [
      "HORIZONTAL",
      "HORIZONTAL_EXPANDABLE",
      "VERTICAL",
      "VERTICAL_EXPANDABLE"
    ]
  },
  "anychart.enums.RadialGridLayout": {
    "constant": [
      "CIRCUIT",
      "RADIAL"
    ]
  },
  "anychart.enums.Orientation": {
    "constant": [
      "BOTTOM",
      "LEFT",
      "RIGHT",
      "TOP"
    ]
  },
  "anychart.enums.LegendPositionMode": {
    "constant": [
      "INSIDE",
      "OUTSIDE"
    ]
  },
  "anychart.enums.Sort": {
    "constant": [
      "ASC",
      "DESC",
      "NONE"
    ]
  },
  "anychart.enums.MarkerType": {
    "constant": [
      "CIRCLE",
      "CROSS",
      "DIAGONAL_CROSS",
      "DIAMOND",
      "LINE",
      "PENTAGON",
      "SQUARE",
      "STAR10",
      "STAR4",
      "STAR5",
      "STAR6",
      "STAR7",
      "TRAPEZIUM",
      "TRIANGLE_DOWN",
      "TRIANGLE_LEFT",
      "TRIANGLE_RIGHT",
      "TRIANGLE_UP"
    ]
  },
  "anychart.enums.MapAsTableMode": {
    "constant": [
      "OHLC",
      "RANGE",
      "VALUE"
    ]
  },
  "anychart.enums.TreeFillingMethod": {
    "constant": [
      "AS_TABLE",
      "AS_TREE"
    ]
  },
  "anychart.enums.LabelsOverlapMode": {
    "constant": [
      "ALLOW_OVERLAP",
      "NO_OVERLAP"
    ]
  },
  "anychart.enums.StockLabelsOverlapMode": {
    "constant": [
      "ALLOW_MAJOR_OVERLAP",
      "ALLOW_MINOR_OVERLAP",
      "ALLOW_OVERLAP",
      "NO_OVERLAP"
    ]
  },
  "anychart.enums.TagCloudMode": {
    "constant": [
      "RECT",
      "SPIRAL"
    ]
  },
  "anychart.enums.BackgroundCornersType": {
    "constant": [
      "CUT",
      "NONE",
      "ROUND",
      "ROUND_INNER"
    ]
  },
  "anychart.enums.LegendItemIconType": {
    "constant": [
      "AREA",
      "BAR",
      "BUBBLE",
      "CANDLESTICK",
      "CIRCLE",
      "COLUMN",
      "LINE",
      "MARKER",
      "OHLC",
      "RANGE_AREA",
      "RANGE_BAR",
      "RANGE_COLUMN",
      "RANGE_SPLINE_AREA",
      "RANGE_STEP_AREA",
      "SPLINE",
      "SPLINE_AREA",
      "SQUARE",
      "STEP_AREA",
      "STEP_LINE"
    ]
  },
  "anychart.enums.LegendItemsSourceMode": {
    "constant": [
      "CATEGORIES",
      "DEFAULT"
    ]
  },
  "anychart.enums.BulletMarkerType": {
    "constant": [
      "BAR",
      "ELLIPSE",
      "LINE",
      "X"
    ]
  },
  "anychart.enums.GaugeSidePosition": {
    "constant": [
      "CENTER",
      "INSIDE",
      "OUTSIDE"
    ]
  },
  "anychart.enums.SidePosition": {
    "constant": [
      "INSIDE",
      "OUTSIDE"
    ]
  },
  "anychart.enums.PyramidLabelsPosition": {
    "constant": [
      "INSIDE",
      "OUTSIDE_LEFT",
      "OUTSIDE_LEFT_IN_COLUMN",
      "OUTSIDE_RIGHT",
      "OUTSIDE_RIGHT_IN_COLUMN"
    ]
  },
  "anychart.enums.EventType": {
    "constant": [
      "ANIMATION_END",
      "ANIMATION_START",
      "BEFORE_CREATE_CONNECTOR",
      "CHART_DRAW",
      "CONNECTOR_CLICK",
      "CONNECTOR_DBL_CLICK",
      "CONNECTOR_MOUSE_DOWN",
      "CONNECTOR_MOUSE_MOVE",
      "CONNECTOR_MOUSE_OUT",
      "CONNECTOR_MOUSE_OVER",
      "CONNECTOR_MOUSE_UP",
      "CONNECTOR_SELECT",
      "DRAG",
      "DRAG_END",
      "DRAG_START",
      "DRILL_CHANGE",
      "LEGEND_ITEM_CLICK",
      "LEGEND_ITEM_DBLCLICK",
      "LEGEND_ITEM_MOUSE_DOWN",
      "LEGEND_ITEM_MOUSE_MOVE",
      "LEGEND_ITEM_MOUSE_OUT",
      "LEGEND_ITEM_MOUSE_OVER",
      "LEGEND_ITEM_MOUSE_UP",
      "POINTS_HOVER",
      "POINTS_SELECT",
      "POINT_CLICK",
      "POINT_DBLCLICK",
      "POINT_HOVER",
      "POINT_MOUSE_DOWN",
      "POINT_MOUSE_MOVE",
      "POINT_MOUSE_OUT",
      "POINT_MOUSE_OVER",
      "POINT_MOUSE_UP",
      "ROW_CLICK",
      "ROW_COLLAPSE_EXPAND",
      "ROW_DBL_CLICK",
      "ROW_MOUSE_DOWN",
      "ROW_MOUSE_MOVE",
      "ROW_MOUSE_OUT",
      "ROW_MOUSE_OVER",
      "ROW_MOUSE_UP",
      "ROW_SELECT",
      "SCROLL_CHANGE",
      "SIGNAL",
      "SPLITTER_CHANGE",
      "TREE_ITEM_CREATE",
      "TREE_ITEM_MOVE",
      "TREE_ITEM_REMOVE",
      "TREE_ITEM_UPDATE",
      "ZOOM",
      "ZOOM_END",
      "ZOOM_START"
    ]
  },
  "anychart.enums.ScaleStackMode": {
    "constant": [
      "NONE",
      "PERCENT",
      "VALUE"
    ]
  },
  "anychart.enums.ScaleComparisonMode": {
    "constant": [
      "NONE",
      "PERCENT",
      "VALUE"
    ]
  },
  "anychart.enums.ScaleCompareWithMode": {
    "constant": [
      "FIRST_VISIBLE",
      "SERIES_START"
    ]
  },
  "anychart.enums.ScatterTicksMode": {
    "constant": [
      "LINEAR",
      "LOGARITHMIC"
    ]
  },
  "anychart.enums.MapSeriesType": {
    "constant": [
      "BUBBLE",
      "CHOROPLETH",
      "CONNECTOR",
      "MARKER"
    ]
  },
  "anychart.enums.MapProjections": {
    "constant": [
      "AITOFF",
      "AUGUST",
      "BONNE",
      "ECKERT1",
      "ECKERT3",
      "EQUIRECTANGULAR",
      "FAHEY",
      "HAMMER",
      "MERCATOR",
      "ORTHOGRAPHIC",
      "ROBINSON",
      "WAGNER6",
      "WSG84"
    ]
  },
  "anychart.enums.MapGridZIndex": {
    "constant": [
      "OVER_MAP",
      "UNDER_MAP"
    ]
  },
  "anychart.enums.MapPointMiddlePositionMode": {
    "constant": [
      "ABSOLUTE",
      "RELATIVE"
    ]
  },
  "anychart.enums.MapPointOutsidePositionMode": {
    "constant": [
      "ABSOLUTE",
      "OFFSET",
      "RELATIVE"
    ]
  },
  "anychart.enums.CartesianSeriesType": {
    "constant": [
      "AREA",
      "BAR",
      "BOX",
      "BUBBLE",
      "CANDLESTICK",
      "COLUMN",
      "LINE",
      "MARKER",
      "OHLC",
      "RANGE_AREA",
      "RANGE_BAR",
      "RANGE_COLUMN",
      "RANGE_SPLINE_AREA",
      "RANGE_STEP_AREA",
      "SPLINE",
      "SPLINE_AREA",
      "STEP_AREA",
      "STEP_LINE"
    ]
  },
  "anychart.enums.Cartesian3dSeriesType": {
    "constant": [
      "AREA",
      "BAR",
      "COLUMN"
    ]
  },
  "anychart.enums.StockSeriesType": {
    "constant": [
      "AREA",
      "CANDLESTICK",
      "COLUMN",
      "LINE",
      "MARKER",
      "OHLC",
      "RANGE_AREA",
      "RANGE_COLUMN",
      "RANGE_SPLINE_AREA",
      "RANGE_STEP_AREA",
      "SPLINE",
      "SPLINE_AREA",
      "STEP_AREA",
      "STEP_LINE"
    ]
  },
  "anychart.enums.MovingAverageType": {
    "constant": [
      "EMA",
      "SMA"
    ]
  },
  "anychart.enums.SparklineSeriesType": {
    "constant": [
      "AREA",
      "COLUMN",
      "LINE",
      "WIN_LOSS"
    ]
  },
  "anychart.enums.LinearGaugePointerType": {
    "constant": [
      "BAR",
      "LED",
      "MARKER",
      "RANGE_BAR",
      "TANK",
      "THERMOMETER"
    ]
  },
  "anychart.enums.GanttDataFields": {
    "constant": [
      "ACTUAL",
      "ACTUAL_END",
      "ACTUAL_START",
      "BASELINE_END",
      "BASELINE_START",
      "CHILDREN",
      "COLLAPSED",
      "CONNECTOR",
      "CONNECTOR_TYPE",
      "CONNECT_TO",
      "END",
      "END_MARKER",
      "FILL",
      "HOVER_FILL",
      "HOVER_STROKE",
      "ID",
      "LABEL",
      "MILESTONE",
      "NAME",
      "PARENT",
      "PERIODS",
      "PROGRESS",
      "PROGRESS_VALUE",
      "ROW_HEIGHT",
      "START",
      "START_MARKER",
      "STROKE"
    ]
  },
  "anychart.enums.GanttRangeAnchor": {
    "constant": [
      "FIRST_DATE",
      "FIRST_VISIBLE_DATE",
      "LAST_DATE",
      "LAST_VISIBLE_DATE"
    ]
  },
  "anychart.enums.ConnectorType": {
    "constant": [
      "FINISH_FINISH",
      "FINISH_START",
      "START_FINISH",
      "START_START"
    ]
  },
  "anychart.enums.ColumnFormats": {
    "constant": [
      "DATE_COMMON_LOG",
      "DATE_DMY_DOTS",
      "DATE_ISO_8601",
      "DATE_US_SHORT",
      "DIRECT_NUMBERING",
      "FINANCIAL",
      "PERCENT",
      "SHORT_TEXT",
      "TEXT"
    ]
  },
  "anychart.enums.GanttDateTimeMarkers": {
    "constant": [
      "CURRENT",
      "END",
      "START"
    ]
  },
  "anychart.enums.DataField": {
    "constant": [
      "DEPENDS_ON",
      "EXPECTED",
      "FROM",
      "ID",
      "MOST_LIKELY",
      "NAME",
      "OPTIMISTIC",
      "PESSIMISTIC",
      "TO"
    ]
  },
  "anychart.enums.RadarSeriesType": {
    "constant": [
      "AREA",
      "LINE",
      "MARKER"
    ]
  },
  "anychart.enums.PolarSeriesType": {
    "constant": [
      "AREA",
      "COLUMN",
      "LINE",
      "MARKER",
      "POLYGON",
      "POLYLINE",
      "RANGE_COLUMN"
    ]
  },
  "anychart.enums.ScatterSeriesType": {
    "constant": [
      "BUBBLE",
      "LINE",
      "MARKER"
    ]
  },
  "anychart.enums.MekkoSeriesType": {
    "constant": [
      "MEKKO"
    ]
  },
  "anychart.enums.WaterfallDataMode": {
    "constant": [
      "ABSOLUTE",
      "DIFF"
    ]
  },
  "anychart.enums.ScaleTypes": {
    "constant": [
      "DATE_TIME",
      "LINEAR",
      "LOG",
      "ORDINAL"
    ]
  },
  "anychart.enums.ScatterScaleTypes": {
    "constant": [
      "DATE_TIME",
      "LINEAR",
      "LOG"
    ]
  },
  "anychart.enums.GaugeScaleTypes": {
    "constant": [
      "LINEAR",
      "LOG"
    ]
  },
  "anychart.enums.ChartDataExportMode": {
    "constant": [
      "GROUPED",
      "RAW",
      "SPECIFIC"
    ]
  },
  "anychart.enums.Interval": {
    "constant": [
      "DAY",
      "DAYS",
      "HOUR",
      "HOURS",
      "MILLISECOND",
      "MINUTE",
      "MINUTES",
      "MONTH",
      "MONTHS",
      "QUARTER",
      "SECOND",
      "SECONDS",
      "SEMESTER",
      "THIRD_OF_MONTH",
      "WEEK",
      "YEAR",
      "YEARS"
    ]
  },
  "anychart.enums.ErrorMode": {
    "constant": [
      "BOTH",
      "NONE",
      "VALUE",
      "X"
    ]
  },
  "anychart.enums.TextParsingMode": {
    "constant": [
      "BY_CHAR",
      "BY_WORD",
      "CSV"
    ]
  },
  "anychart.enums.HAlign": {
    "constant": [
      "CENTER",
      "END",
      "LEFT",
      "RIGHT",
      "START"
    ]
  },
  "anychart.enums.VAlign": {
    "constant": [
      "BOTTOM",
      "MIDDLE",
      "TOP"
    ]
  },
  "anychart.enums.FontStyle": {
    "constant": [
      "ITALIC",
      "NORMAL",
      "OBLIQUE"
    ]
  },
  "anychart.enums.FontVariant": {
    "constant": [
      "NORMAL",
      "SMALL_CAP"
    ]
  },
  "anychart.enums.TextWrap": {
    "constant": [
      "BY_LETTER",
      "BY_WORD",
      "NO_WRAP"
    ]
  },
  "anychart.enums.AggregationType": {
    "constant": [
      "AVERAGE",
      "FIRST",
      "FIRST_VALUE",
      "LAST",
      "LAST_VALUE",
      "LIST",
      "MAX",
      "MIN",
      "SUM",
      "WEIGHTED_AVERAGE"
    ]
  },
  "anychart.enums.TableSearchMode": {
    "constant": [
      "EXACT",
      "EXACT_OR_NEXT",
      "EXACT_OR_PREV",
      "NEAREST"
    ]
  },
  "anychart.enums.StockRangeType": {
    "constant": [
      "MAX",
      "MTD",
      "QTD",
      "UNIT",
      "YTD"
    ]
  },
  "anychart.enums.StockRangeAnchor": {
    "constant": [
      "FIRST_DATE",
      "FIRST_VISIBLE_DATE",
      "LAST_DATE",
      "LAST_VISIBLE_DATE"
    ]
  },
  "anychart.enums.TooltipDisplayMode": {
    "constant": [
      "SEPARATED",
      "SINGLE",
      "UNION"
    ]
  },
  "anychart.enums.TooltipPositionMode": {
    "constant": [
      "CHART",
      "FLOAT",
      "POINT"
    ]
  },
  "anychart.enums.CrosshairDisplayMode": {
    "constant": [
      "FLOAT",
      "STICKY"
    ]
  },
  "anychart.enums.LabelsDisplayMode": {
    "constant": [
      "ALWAYS_SHOW",
      "CLIP",
      "DROP"
    ]
  },
  "anychart.enums.StepDirection": {
    "constant": [
      "BACKWARD",
      "CENTER",
      "FORWARD"
    ]
  },
  "anychart.enums.TokenType": {
    "constant": [
      "DATE_TIME",
      "NUMBER",
      "PERCENT",
      "STRING",
      "UNKNOWN"
    ]
  },
  "anychart.enums.StringToken": {
    "constant": [
      "ACTIVITY_INDEX",
      "AXIS_NAME",
      "AXIS_SCALE_MAX",
      "AXIS_SCALE_MIN",
      "BUBBLE_SIZE",
      "BUBBLE_SIZE_PERCENT_OF_CATEGORY",
      "BUBBLE_SIZE_PERCENT_OF_SERIES",
      "BUBBLE_SIZE_PERCENT_OF_TOTAL",
      "CATEGORY_NAME",
      "CATEGORY_Y_AVERAGE",
      "CATEGORY_Y_MEDIAN",
      "CATEGORY_Y_MODE",
      "CATEGORY_Y_PERCENT_OF_TOTAL",
      "CATEGORY_Y_RANGE_AVERAGE",
      "CATEGORY_Y_RANGE_MAX",
      "CATEGORY_Y_RANGE_MEDIAN",
      "CATEGORY_Y_RANGE_MIN",
      "CATEGORY_Y_RANGE_MODE",
      "CATEGORY_Y_RANGE_PERCENT_OF_TOTAL",
      "CATEGORY_Y_RANGE_SUM",
      "CATEGORY_Y_SUM",
      "CLOSE",
      "DATA_PLOT_BUBBLE_MAX_SIZE",
      "DATA_PLOT_BUBBLE_MIN_SIZE",
      "DATA_PLOT_BUBBLE_SIZE_AVERAGE",
      "DATA_PLOT_BUBBLE_SIZE_SUM",
      "DATA_PLOT_MAX_Y_SUM_SERIES_NAME",
      "DATA_PLOT_MAX_Y_VALUE_POINT_NAME",
      "DATA_PLOT_MAX_Y_VALUE_POINT_SERIES_NAME",
      "DATA_PLOT_MIN_Y_SUM_SERIES_NAME",
      "DATA_PLOT_MIN_Y_VALUE_POINT_NAME",
      "DATA_PLOT_MIN_Y_VALUE_POINT_SERIES_NAME",
      "DATA_PLOT_POINT_COUNT",
      "DATA_PLOT_SERIES_COUNT",
      "DATA_PLOT_X_AVERAGE",
      "DATA_PLOT_X_MAX",
      "DATA_PLOT_X_MIN",
      "DATA_PLOT_X_SUM",
      "DATA_PLOT_Y_AVERAGE",
      "DATA_PLOT_Y_MAX",
      "DATA_PLOT_Y_MIN",
      "DATA_PLOT_Y_RANGE_MAX",
      "DATA_PLOT_Y_RANGE_MIN",
      "DATA_PLOT_Y_RANGE_SUM",
      "DATA_PLOT_Y_SUM",
      "END",
      "HIGH",
      "INDEX",
      "LOW",
      "MINUTES_PER_DAY",
      "NAME",
      "OPEN",
      "PERCENT_VALUE",
      "PERT_CHART_CRITICAL_PATH_STANDARD_DEVIATION",
      "PERT_CHART_PROJECT_DURATION",
      "RANGE",
      "RANGE_END",
      "RANGE_START",
      "RESOURCE_INDEX",
      "SERIES_BUBBLE_MAX_SIZE",
      "SERIES_BUBBLE_MIN_SIZE",
      "SERIES_BUBBLE_SIZE_AVERAGE",
      "SERIES_BUBBLE_SIZE_MEDIAN",
      "SERIES_BUBBLE_SIZE_MODE",
      "SERIES_BUBBLE_SIZE_SUM",
      "SERIES_FIRST_X_VALUE",
      "SERIES_FIRST_Y_VALUE",
      "SERIES_LAST_X_VALUE",
      "SERIES_LAST_Y_VALUE",
      "SERIES_MAX",
      "SERIES_MIN",
      "SERIES_NAME",
      "SERIES_POINT_COUNT",
      "SERIES_X_AVERAGE",
      "SERIES_X_AXIS_NAME",
      "SERIES_X_MAX",
      "SERIES_X_MEDIAN",
      "SERIES_X_MIN",
      "SERIES_X_MODE",
      "SERIES_X_SUM",
      "SERIES_Y_AVERAGE",
      "SERIES_Y_AXIS_NAME",
      "SERIES_Y_MAX",
      "SERIES_Y_MEDIAN",
      "SERIES_Y_MIN",
      "SERIES_Y_MODE",
      "SERIES_Y_RANGE_MAX",
      "SERIES_Y_RANGE_MIN",
      "SERIES_Y_RANGE_SUM",
      "SERIES_Y_SUM",
      "START",
      "VALUE",
      "X_PERCENT_OF_SERIES",
      "X_PERCENT_OF_TOTAL",
      "X_VALUE",
      "Y_PERCENT_OF_CATEGORY",
      "Y_PERCENT_OF_SERIES",
      "Y_PERCENT_OF_TOTAL",
      "Y_VALUE"
    ]
  },
  "anychart.enums.Statistics": {
    "constant": [
      "AVERAGE",
      "BUBBLE_SIZE",
      "BUBBLE_SIZE_PERCENT_OF_CATEGORY",
      "BUBBLE_SIZE_PERCENT_OF_SERIES",
      "BUBBLE_SIZE_PERCENT_OF_TOTAL",
      "CATEGORY_NAME",
      "CATEGORY_Y_AVERAGE",
      "CATEGORY_Y_MAX",
      "CATEGORY_Y_MEDIAN",
      "CATEGORY_Y_MIN",
      "CATEGORY_Y_MODE",
      "CATEGORY_Y_PERCENT_OF_TOTAL",
      "CATEGORY_Y_RANGE_AVERAGE",
      "CATEGORY_Y_RANGE_MAX",
      "CATEGORY_Y_RANGE_MEDIAN",
      "CATEGORY_Y_RANGE_MIN",
      "CATEGORY_Y_RANGE_MODE",
      "CATEGORY_Y_RANGE_PERCENT_OF_TOTAL",
      "CATEGORY_Y_RANGE_SUM",
      "CATEGORY_Y_SUM",
      "CLOSE",
      "COUNT",
      "DATA_PLOT_BUBBLE_MAX_SIZE",
      "DATA_PLOT_BUBBLE_MIN_SIZE",
      "DATA_PLOT_BUBBLE_SIZE_AVERAGE",
      "DATA_PLOT_BUBBLE_SIZE_SUM",
      "DATA_PLOT_MAX_X_SUM_SERIES_NAME",
      "DATA_PLOT_MAX_X_VALUE_POINT_SERIES_NAME",
      "DATA_PLOT_MAX_Y_SUM_SERIES_NAME",
      "DATA_PLOT_MAX_Y_VALUE_POINT_SERIES_NAME",
      "DATA_PLOT_MIN_X_SUM_SERIES_NAME",
      "DATA_PLOT_MIN_X_VALUE_POINT_SERIES_NAME",
      "DATA_PLOT_MIN_Y_SUM_SERIES_NAME",
      "DATA_PLOT_MIN_Y_VALUE_POINT_SERIES_NAME",
      "DATA_PLOT_POINT_COUNT",
      "DATA_PLOT_SERIES_COUNT",
      "DATA_PLOT_X_AVERAGE",
      "DATA_PLOT_X_MAX",
      "DATA_PLOT_X_MIN",
      "DATA_PLOT_X_SUM",
      "DATA_PLOT_Y_AVERAGE",
      "DATA_PLOT_Y_MAX",
      "DATA_PLOT_Y_MIN",
      "DATA_PLOT_Y_RANGE_MAX",
      "DATA_PLOT_Y_RANGE_MIN",
      "DATA_PLOT_Y_RANGE_SUM",
      "DATA_PLOT_Y_SUM",
      "HIGH",
      "INDEX",
      "LOW",
      "MAX",
      "MIN",
      "NAME",
      "OPEN",
      "PERCENT_VALUE",
      "PERT_CHART_CRITICAL_PATH_STANDARD_DEVIATION",
      "PERT_CHART_PROJECT_DURATION",
      "POINTS_COUNT",
      "RANGE",
      "RANGE_END",
      "RANGE_START",
      "SERIES_AVERAGE",
      "SERIES_BUBBLE_MAX_SIZE",
      "SERIES_BUBBLE_MIN_SIZE",
      "SERIES_BUBBLE_SIZE_AVERAGE",
      "SERIES_BUBBLE_SIZE_MEDIAN",
      "SERIES_BUBBLE_SIZE_MODE",
      "SERIES_BUBBLE_SIZE_SUM",
      "SERIES_FIRST_X_VALUE",
      "SERIES_FIRST_Y_VALUE",
      "SERIES_LAST_X_VALUE",
      "SERIES_LAST_Y_VALUE",
      "SERIES_MAX",
      "SERIES_MIN",
      "SERIES_NAME",
      "SERIES_POINTS_COUNT",
      "SERIES_POINT_COUNT",
      "SERIES_SUM",
      "SERIES_X_AVERAGE",
      "SERIES_X_MAX",
      "SERIES_X_MEDIAN",
      "SERIES_X_MIN",
      "SERIES_X_MODE",
      "SERIES_X_SUM",
      "SERIES_Y_AVERAGE",
      "SERIES_Y_MAX",
      "SERIES_Y_MEDIAN",
      "SERIES_Y_MIN",
      "SERIES_Y_MODE",
      "SERIES_Y_RANGE_AVERAGE",
      "SERIES_Y_RANGE_MAX",
      "SERIES_Y_RANGE_MEDIAN",
      "SERIES_Y_RANGE_MIN",
      "SERIES_Y_RANGE_MODE",
      "SERIES_Y_RANGE_SUM",
      "SERIES_Y_SUM",
      "SUM",
      "VALUE",
      "X_PERCENT_OF_SERIES",
      "X_PERCENT_OF_TOTAL",
      "X_SCALES_MAX",
      "X_SCALES_MIN",
      "X_VALUE",
      "Y_PERCENT_OF_CATEGORY",
      "Y_PERCENT_OF_SERIES",
      "Y_PERCENT_OF_TOTAL",
      "Y_SCALES_MAX",
      "Y_SCALES_MIN",
      "Y_VALUE"
    ]
  },
  "anychart.enums.ShapeType": {
    "constant": [
      "CIRCLE",
      "ELLIPSE",
      "PATH",
      "RECT"
    ]
  },
  "anychart.enums.A11yMode": {
    "constant": [
      "CHART_ELEMENTS",
      "DATA_TABLE"
    ]
  },
  "anychart.enums.AnnotationTypes": {
    "constant": [
      "ANDREWS_PITCHFORK",
      "ELLIPSE",
      "FIBONACCI_ARC",
      "FIBONACCI_FAN",
      "FIBONACCI_RETRACEMENT",
      "FIBONACCI_TIMEZONES",
      "HORIZONTAL_LINE",
      "INFINITE_LINE",
      "LINE",
      "MARKER",
      "RAY",
      "RECTANGLE",
      "TREND_CHANNEL",
      "TRIANGLE",
      "VERTICAL_LINE"
    ]
  },
  "anychart.enums.MilestoneShape": {
    "constant": [
      "CIRCLE",
      "RECTANGLE",
      "RHOMBUS"
    ]
  },
  "anychart.enums.LocaleDateTimeFormat": {
    "constant": [
      "DAY",
      "DAY_HOUR",
      "DAY_MILLISECOND",
      "DAY_MINUTE",
      "DAY_SECOND",
      "HOUR",
      "HOUR_MILLISECOND",
      "HOUR_MINUTE",
      "HOUR_SECOND",
      "MILLISECOND",
      "MINUTE",
      "MINUTE_MILLISECOND",
      "MINUTE_SECOND",
      "MONTH",
      "MONTH_DAY",
      "MONTH_HOUR",
      "MONTH_MILLISECOND",
      "MONTH_MINUTE",
      "MONTH_SECOND",
      "MONTH_THIRD_OF_MONTH",
      "MONTH_WEEK",
      "QUARTER",
      "QUARTER_DAY",
      "QUARTER_HOUR",
      "QUARTER_MILLISECOND",
      "QUARTER_MINUTE",
      "QUARTER_MONTH",
      "QUARTER_SECOND",
      "QUARTER_THIRD_OF_MONTH",
      "QUARTER_WEEK",
      "SECOND",
      "SECOND_MILLISECOND",
      "SEMESTER",
      "SEMESTER_DAY",
      "SEMESTER_HOUR",
      "SEMESTER_MILLISECOND",
      "SEMESTER_MINUTE",
      "SEMESTER_MONTH",
      "SEMESTER_QUARTER",
      "SEMESTER_SECOND",
      "SEMESTER_THIRD_OF_MONTH",
      "SEMESTER_WEEK",
      "THIRD_OF_MONTH",
      "THIRD_OF_MONTH_DAY",
      "THIRD_OF_MONTH_HOUR",
      "THIRD_OF_MONTH_MILLISECOND",
      "THIRD_OF_MONTH_MINUTE",
      "THIRD_OF_MONTH_SECOND",
      "THIRD_OF_MONTH_WEEK",
      "WEEK",
      "WEEK_DAY",
      "WEEK_HOUR",
      "WEEK_MILLISECOND",
      "WEEK_MINUTE",
      "WEEK_SECOND",
      "YEAR",
      "YEAR_DAY",
      "YEAR_HOUR",
      "YEAR_MILLISECOND",
      "YEAR_MINUTE",
      "YEAR_MONTH",
      "YEAR_QUARTER",
      "YEAR_SECOND",
      "YEAR_SEMESTER",
      "YEAR_THIRD_OF_MONTH",
      "YEAR_WEEK"
    ]
  },
  "anychart.enums.IntervalFormatPrefix": {
    "constant": [
      "FULL",
      "NONE"
    ]
  },
  "anychart.enums.AvailabilityPeriod": {
    "constant": [
      "DAY",
      "NONE",
      "WEEK",
      "YEAR"
    ]
  },
  "anychart.enums.TimeTrackingMode": {
    "constant": [
      "ACTIVITY_PER_CHART",
      "ACTIVITY_PER_RESOURCE",
      "AVAILABILITY_PER_CHART",
      "AVAILABILITY_PER_RESOURCE"
    ]
  },
  "anychart.core.ui.StageCredits": {
    "functions": [
      "alt (opt_value) ",
      "enabled (opt_value) ",
      "imgAlt (opt_value) ",
      "logoSrc (opt_value) ",
      "text (opt_value) ",
      "url (opt_value) "
    ]
  },
  "anychart.core.ui.Background": {
    "functions": [
      "bottom (opt_value) ",
      "bottomStroke () ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cornerType () ",
      "corners (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "leftStroke () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rightStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "topStroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.LabelsFactory": {
    "functions": [
      "adjustFontSize () ",
      "anchor () ",
      "background (opt_value) ",
      "clip () ",
      "connectorStroke () ",
      "disablePointerEvents () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "format () ",
      "getLabel (index) ",
      "getLabelsCount () ",
      "hAlign () ",
      "height () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize () ",
      "minFontSize () ",
      "offsetX () ",
      "offsetY () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "position () ",
      "positionFormatter () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation () ",
      "selectable () ",
      "textDirection () ",
      "textFormatter () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Title": {
    "functions": [
      "adjustFontSize () ",
      "align () ",
      "background (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "getRemainingBounds () ",
      "hAlign () ",
      "height () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxFontSize () ",
      "minFontSize () ",
      "orientation () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation () ",
      "selectable () ",
      "text () ",
      "textDirection () ",
      "textIndent () ",
      "textOverflow () ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.ColorRangeTicks": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.MarkersFactory": {
    "functions": [
      "anchor (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "offsetX (opt_value) ",
      "offsetY (opt_value) ",
      "position (opt_value) ",
      "positionFormatter (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "size (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "type (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.ColorRange": {
    "functions": [
      "align (opt_value) ",
      "colorLineSize (opt_value) ",
      "dispose () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "isHorizontal () ",
      "labels (opt_value) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "marker (opt_value) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "orientation (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "staggerLines (opt_value) ",
      "staggerMaxLines (opt_value) ",
      "staggerMode (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Button": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.ScrollBar": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "backgroundStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "barSize (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "buttonsVisible (opt_value) ",
      "cornersRadius (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "mouseOutOpacity (opt_value) ",
      "mouseOverOpacity (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "sliderFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "sliderStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.LabelBase": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Label": {
    "functions": [
      "adjustFontSize (opt_adjustOrAdjustByWidth, opt_adjustByHeight) ",
      "anchor (opt_value) ",
      "background (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize (opt_value) ",
      "minFontSize (opt_value) ",
      "offsetX (opt_value) ",
      "offsetY (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Separator": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getRemainingBounds () ",
      "height () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "orientation () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Tooltip": {
    "functions": [
      "adjustFontSize () ",
      "allowLeaveChart () ",
      "allowLeaveScreen () ",
      "allowLeaveStage () ",
      "anchor () ",
      "background (opt_value) ",
      "content (opt_value) ",
      "contentFormatter () ",
      "disablePointerEvents () ",
      "displayMode () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "format () ",
      "hAlign () ",
      "height () ",
      "hide (opt_force, opt_event) ",
      "hideDelay (opt_value) ",
      "isFloating (opt_value) ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize () ",
      "minFontSize () ",
      "offsetX () ",
      "offsetY () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "position () ",
      "positionMode () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable () ",
      "separator (opt_value) ",
      "textDirection () ",
      "textFormatter () ",
      "textIndent () ",
      "textOverflow () ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap () ",
      "title (opt_value) ",
      "titleFormat () ",
      "titleFormatter () ",
      "unionFormat () ",
      "unionTextFormatter () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "valuePostfix () ",
      "valuePrefix () ",
      "width () ",
      "x () ",
      "y () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.BaseGrid": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.SimpleSplitter": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Splitter": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.DataGrid": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "column (opt_indexOrValue, opt_value) ",
      "columnStroke (opt_value) ",
      "data (opt_value) ",
      "dispose () ",
      "draw () ",
      "editStructurePreviewDashStroke (opt_value) ",
      "editStructurePreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editStructurePreviewStroke (opt_value) ",
      "editing (opt_value) ",
      "enabled (opt_value) ",
      "endIndex (opt_value) ",
      "getPixelBounds () ",
      "getVisibleItems () ",
      "height (opt_value) ",
      "horizontalOffset (opt_value) ",
      "horizontalScrollBar (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowHoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowSelectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "startIndex (opt_value) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalOffset (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.LegendItem": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getContentBounds () ",
      "getHeight () ",
      "getTextElement () ",
      "getWidth () ",
      "hAlign (opt_value) ",
      "iconFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "iconHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "iconStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "iconTextSpacing (opt_value) ",
      "iconType (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "x (opt_value) ",
      "y (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.PaginatorButton": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Paginator": {
    "functions": [
      "background (opt_value) ",
      "currentPage (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getPagesCount () ",
      "hAlign (opt_value) ",
      "layout (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "orientation (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Legend": {
    "functions": [
      "align (opt_value) ",
      "background (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "drag (opt_value) ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "hoverCursor (opt_value) ",
      "iconSize (opt_value) ",
      "iconTextSpacing (opt_value) ",
      "inverted (opt_value) ",
      "items (opt_value) ",
      "itemsFormat (opt_value) ",
      "itemsFormatter (opt_value) ",
      "itemsLayout (opt_value) ",
      "itemsSourceMode (opt_value) ",
      "itemsSpacing (opt_value) ",
      "itemsTextFormatter (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "paginator (opt_value) ",
      "position (opt_value) ",
      "positionMode (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "title (opt_value) ",
      "titleFormat (opt_value) ",
      "titleFormatter (opt_value) ",
      "titleSeparator (opt_value) ",
      "tooltip (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Timeline": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baseFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baseStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "baselineAbove (opt_value) ",
      "baselineFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baselineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "columnStroke (opt_value) ",
      "connectorFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "connectorPreviewStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "dispose () ",
      "editConnectorThumbFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editConnectorThumbStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editFinishConnectorMarkerHorizontalOffset (opt_value) ",
      "editFinishConnectorMarkerSize (opt_value) ",
      "editFinishConnectorMarkerType (opt_value) ",
      "editFinishConnectorMarkerVerticalOffset (opt_value) ",
      "editIntervalThumbFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editIntervalThumbStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editIntervalWidth (opt_value) ",
      "editPreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editPreviewStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editProgressFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editProgressStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editStartConnectorMarkerHorizontalOffset (opt_value) ",
      "editStartConnectorMarkerSize (opt_value) ",
      "editStartConnectorMarkerType (opt_value) ",
      "editStartConnectorMarkerVerticalOffset (opt_value) ",
      "editStructurePreviewDashStroke (opt_value) ",
      "editStructurePreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editStructurePreviewStroke (opt_value) ",
      "editing (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "header (opt_value) ",
      "height (opt_value) ",
      "horizontalScrollBar (opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "maximumGap (opt_value) ",
      "milestoneFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "milestoneStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minimumGap (opt_value) ",
      "parentFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "progressFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "progressStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowHoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowSelectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "scale (opt_value) ",
      "selectedElementFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectedElementStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalScrollBar (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Overlay": {
    "functions": [
      "className () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getElement () ",
      "id () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.ui.Scroller": {
    "functions": [
      "allowRangeChange (opt_value) ",
      "autoHide (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "height (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "minHeight (opt_value) ",
      "orientation (opt_value) ",
      "outlineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "thumbs (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.table.Border": {
    "functions": [
      "bottom (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "left (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "right (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "top (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) "
    ]
  },
  "anychart.core.ui.table.Padding": {
    "functions": [
      "bottom (opt_value) ",
      "left (opt_value) ",
      "right (opt_value) ",
      "top (opt_value) "
    ]
  },
  "anychart.core.ui.table.Base": {
    "functions": [
      "border (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "disablePointerEvents (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) "
    ]
  },
  "anychart.core.ui.table.Cell": {
    "functions": [
      "border (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "colSpan (opt_value) ",
      "content (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getBounds () ",
      "getCol () ",
      "getColNum () ",
      "getRow () ",
      "getRowNum () ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "rowSpan (opt_value) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) "
    ]
  },
  "anychart.core.ui.table.Column": {
    "functions": [
      "border (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "cellBorder (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellPadding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "disablePointerEvents (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getCell (row) ",
      "getColNum () ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minWidth (opt_value) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) "
    ]
  },
  "anychart.core.ui.table.Row": {
    "functions": [
      "border (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "cellBorder (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellPadding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "disablePointerEvents (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getCell (col) ",
      "getRowNum () ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "maxHeight (opt_value) ",
      "minHeight (opt_value) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) "
    ]
  },
  "anychart.core.ui.Table": {
    "functions": [
      "border (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellBorder (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellPadding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "colsCount (opt_value) ",
      "colsMaxWidth (opt_value) ",
      "colsMinWidth (opt_value) ",
      "colsWidth (opt_value) ",
      "contents (opt_tableValues, opt_demergeCells) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getCell (row, col) ",
      "getCol (col) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getRow (row) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "left (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowsCount (opt_value) ",
      "rowsHeight (opt_value) ",
      "rowsMaxHeight (opt_value) ",
      "rowsMinHeight (opt_value) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "selectable (opt_value) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.CircularLabelsFactory": {
    "functions": [
      "adjustFontSize () ",
      "anchor () ",
      "autoRotate () ",
      "background (opt_value) ",
      "clip () ",
      "connectorStroke () ",
      "disablePointerEvents () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "format () ",
      "getLabel (index) ",
      "getLabelsCount () ",
      "hAlign () ",
      "height () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize () ",
      "minFontSize () ",
      "offsetX () ",
      "offsetY () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "position () ",
      "positionFormatter () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation () ",
      "selectable () ",
      "textDirection () ",
      "textFormatter () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.ChartCredits": {
    "functions": [
      "alt (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "imgAlt (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "logoSrc (opt_value) ",
      "removeAllListeners (opt_type) ",
      "text (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "url (opt_value) "
    ]
  },
  "anychart.core.ui.CrosshairLabel": {
    "functions": [
      "adjustFontSize (opt_adjustOrAdjustByWidth, opt_adjustByHeight) ",
      "anchor (opt_value) ",
      "axisIndex (opt_value) ",
      "background (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "format (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize (opt_value) ",
      "minFontSize (opt_value) ",
      "offsetX (opt_value) ",
      "offsetY (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textFormatter (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Crosshair": {
    "functions": [
      "displayMode (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xLabel (opt_value) ",
      "xStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "yLabel (opt_value) ",
      "yStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.ChartScroller": {
    "functions": [
      "allowRangeChange (opt_value) ",
      "autoHide (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "height (opt_value) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "minHeight (opt_value) ",
      "orientation (opt_value) ",
      "outlineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "thumbs (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.CircularLabel": {
    "functions": [
      "adjustFontSize (opt_adjustOrAdjustByWidth, opt_adjustByHeight) ",
      "anchor (opt_value) ",
      "background (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize (opt_value) ",
      "minFontSize (opt_value) ",
      "offsetX (opt_value) ",
      "offsetY (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.Callout": {
    "functions": [
      "align (opt_value) ",
      "background (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "hoverLabels (opt_value) ",
      "items (opt_value) ",
      "labels (opt_value) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "orientation (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectLabels (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ui.MapCrosshair": {
    "functions": [
      "displayMode (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xLabel (opt_value) ",
      "xStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "yLabel (opt_value) ",
      "yStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.Base": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Bounds": {
    "functions": [
      "bottom (opt_value) ",
      "dispose () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "set (opt_xOrRect, opt_y, opt_width, opt_height) ",
      "toRect (opt_parentLeftOrRect, opt_parentTop, opt_parentWidth, opt_parentHeight) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) "
    ]
  },
  "anychart.core.utils.Space": {
    "functions": [
      "bottom () ",
      "dispose () ",
      "left () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "right () ",
      "set (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "top () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Padding": {
    "functions": [
      "bottom () ",
      "dispose () ",
      "left () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "right () ",
      "set (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "top () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Margin": {
    "functions": [
      "bottom () ",
      "dispose () ",
      "left () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "right () ",
      "set (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "top () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.TypedLayer": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clip (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "drag (opt_value) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getChildAt (index) ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hasParent () ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "numChildren () ",
      "parent (opt_value) ",
      "path () ",
      "pie (cx, cy, r, start, extent) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.utils.Animation": {
    "functions": [
      "dispose () ",
      "duration (opt_value) ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.A11y": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.ChartA11y": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mode (opt_value) ",
      "removeAllListeners (opt_type) ",
      "titleFormat (opt_value) ",
      "titleFormatter (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.SeriesA11y": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "titleFormat (opt_value) ",
      "titleFormatter (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Interactivity": {
    "functions": [
      "dispose () ",
      "hoverMode (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "selectionMode (opt_value) ",
      "spotRadius (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Crossing": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Quarter": {
    "functions": [
      "bottom (opt_value) ",
      "bottomStroke () ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cornerType () ",
      "corners (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "leftStroke () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rightStroke () ",
      "stroke () ",
      "title (opt_value) ",
      "top (opt_value) ",
      "topStroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.utils.QuarterSettings": {
    "functions": [
      "dispose () ",
      "leftBottom (opt_value) ",
      "leftTop (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "rightBottom (opt_value) ",
      "rightTop (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.utils.Error": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mode (opt_value) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueError (opt_value) ",
      "valueErrorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "valueErrorWidth (opt_value) ",
      "valueLowerError (opt_value) ",
      "valueUpperError (opt_value) ",
      "xError (opt_value) ",
      "xErrorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "xErrorWidth (opt_value) ",
      "xLowerError (opt_value) ",
      "xUpperError (opt_value) "
    ]
  },
  "anychart.core.utils.LegendItemSettings": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "disabled (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "format (opt_value) ",
      "hAlign (opt_value) ",
      "iconEnabled (opt_value) ",
      "iconFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "iconHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "iconMarkerFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "iconMarkerStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "iconMarkerType (opt_value) ",
      "iconSize (opt_value) ",
      "iconStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "iconTextSpacing (opt_value) ",
      "iconType (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textFormatter (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.utils.DrawingPlanIterator": {
    "functions": [
      "advance () ",
      "get (fieldName) ",
      "getIndex () ",
      "getRowsCount () ",
      "meta (name, opt_value) ",
      "reset () ",
      "select (index) "
    ]
  },
  "anychart.core.utils.OrdinalZoom": {
    "functions": [
      "continuous (opt_value) ",
      "getEndRatio () ",
      "getStartRatio () ",
      "setTo (startRatio, endRatio) ",
      "setToPointsCount (pointsCount, opt_fromEnd, opt_scale) ",
      "setToValues (startValue, endValue, opt_scale) "
    ]
  },
  "anychart.core.utils.ArrayIterator": {
    "functions": [
      "advance () ",
      "get (fieldName) ",
      "getIndex () ",
      "getRowsCount () ",
      "meta (name, opt_value) ",
      "reset () ",
      "select (index) "
    ]
  },
  "anychart.core.utils.MapInteractivity": {
    "functions": [
      "copyFormat (opt_value) ",
      "copyFormatter (opt_value) ",
      "dispose () ",
      "drag (opt_value) ",
      "hoverMode (opt_value) ",
      "keyboardZoomAndMove (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mouseWheel (opt_value) ",
      "removeAllListeners (opt_type) ",
      "selectionMode (opt_value) ",
      "spotRadius (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zoomOnDoubleClick (opt_value) ",
      "zoomOnMouseWheel (opt_value) "
    ]
  },
  "anychart.core.utils.UnboundRegionsSettings": {
    "functions": [
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) "
    ]
  },
  "anychart.core.utils.StockInteractivity": {
    "functions": [
      "dispose () ",
      "hoverMode (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "scrollOnMouseWheel (opt_value) ",
      "selectionMode (opt_value) ",
      "spotRadius (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zoomOnMouseWheel (opt_value) "
    ]
  },
  "anychart.core.VisualBase": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.VisualBaseWithBounds": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Ticks": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Linear": {
    "functions": [
      "dispose () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "isHorizontal () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "orientation (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "staggerLines (opt_value) ",
      "staggerMaxLines (opt_value) ",
      "staggerMode (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.RadialTicks": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Polar": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getRemainingBounds () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Radar": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "getRemainingBounds () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Radial": {
    "functions": [
      "dispose () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.CircularTicks": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "type (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Circular": {
    "functions": [
      "cornersRounding (opt_value) ",
      "dispose () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "radius (opt_value) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "startAngle (opt_value) ",
      "sweepAngle (opt_value) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.LinearGauge": {
    "functions": [
      "dispose () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "isHorizontal () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "offset (opt_value) ",
      "orientation (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "staggerLines (opt_value) ",
      "staggerMaxLines (opt_value) ",
      "staggerMode (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.MapTicks": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "length () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.Map": {
    "functions": [
      "dispose () ",
      "drawFirstLabel () ",
      "drawLastLabel () ",
      "enabled (opt_value) ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke () ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.MapSettings": {
    "functions": [
      "bottom (opt_value) ",
      "dispose () ",
      "drawFirstLabel () ",
      "drawLastLabel () ",
      "enabled () ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode () ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "stroke () ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.axes.StockTicks": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axes.StockDateTime": {
    "functions": [
      "background (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "height (opt_value) ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "showHelperLabel (opt_value) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.Text": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gantt.Controller": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.gantt.TimelineHeader": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "levelsSeparationStroke (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowLevel (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "midLevel (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "topLevel (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.PathBase": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.GanttLine": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "value (opt_newValue) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.GanttRange": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "from (opt_newValue) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "to (opt_newValue) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.TextBase": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.GanttText": {
    "functions": [
      "align (opt_value) ",
      "anchor (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "offsetX (opt_newValue) ",
      "offsetY (opt_newValue) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "scale (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "value (opt_newValue) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.Line": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "value (opt_newValue) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.Range": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "from (opt_newValue) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "to (opt_newValue) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.Text": {
    "functions": [
      "align (opt_value) ",
      "anchor (opt_value) ",
      "axis (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "offsetX (opt_newValue) ",
      "offsetY (opt_newValue) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "scale (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "value (opt_newValue) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.Line3d": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "value (opt_newValue) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.Range3d": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "from (opt_newValue) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "to (opt_newValue) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.Text3d": {
    "functions": [
      "align (opt_value) ",
      "anchor (opt_value) ",
      "axis (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "offsetX (opt_newValue) ",
      "offsetY (opt_newValue) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "scale (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "value (opt_newValue) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.axisMarkers.CircularRange": {
    "functions": [
      "axisIndex (opt_index) ",
      "cornersRounding (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "endSize (opt_value) ",
      "fill (opt_value) ",
      "from (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "radius (opt_value) ",
      "removeAllListeners (opt_type) ",
      "startSize (opt_value) ",
      "to (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.resource.resourceList.Settings": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.resource.resourceList.SettingsWithMargin": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.resource.resourceList.ImageSettings": {
    "functions": [
      "align () ",
      "borderRadius () ",
      "dispose () ",
      "fittingMode () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "opacity () ",
      "removeAllListeners (opt_type) ",
      "size () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.resource.resourceList.Item": {
    "functions": [
      "description () ",
      "dispose () ",
      "enabled (opt_value) ",
      "imageSrc () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "tags () ",
      "type () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.resource.resourceList.TextSettings": {
    "functions": [
      "disablePointerEvents () ",
      "dispose () ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "hAlign () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "removeAllListeners (opt_type) ",
      "selectable () ",
      "textDirection () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () "
    ]
  },
  "anychart.core.resource.resourceList.TagsSettings": {
    "functions": [
      "background (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "hAlign () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "removeAllListeners (opt_type) ",
      "selectable () ",
      "textDirection () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () "
    ]
  },
  "anychart.core.resource.ResourceList": {
    "functions": [
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "descriptions (opt_value) ",
      "dispose () ",
      "drawBottomLine () ",
      "drawLeftLine () ",
      "drawRightLine () ",
      "drawTopLine () ",
      "enabled (opt_value) ",
      "evenFill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "images (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "names (opt_value) ",
      "oddFill () ",
      "overlay (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "stroke () ",
      "tags (opt_value) ",
      "target (opt_value) ",
      "top (opt_value) ",
      "types (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.resource.Activities": {
    "functions": [
      "color () ",
      "dispose () ",
      "fill () ",
      "hatchFill () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverLabels (opt_value) ",
      "hoverStroke () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectLabels (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.resource.Conflicts": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "hatchFill () ",
      "height () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.resource.Grid": {
    "functions": [
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "drawBottomLine () ",
      "drawLeftLine () ",
      "drawRightLine () ",
      "drawTopLine () ",
      "enabled (opt_value) ",
      "evenFill () ",
      "evenHatchFill () ",
      "evenHolidayFill () ",
      "evenHolidayHatchFill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "horizontalStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "oddFill () ",
      "oddHatchFill () ",
      "oddHolidayFill () ",
      "oddHolidayHatchFill () ",
      "overlay (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalStroke () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.resource.Logo": {
    "functions": [
      "bottom (opt_value) ",
      "bottomStroke () ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cornerType () ",
      "corners (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "leftStroke () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "overlay (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rightStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "topStroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.resource.Resource": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.resource.TimeLineLevelHolidaysSettings": {
    "functions": [
      "adjustFontSize () ",
      "disablePointerEvents () ",
      "dispose () ",
      "fill () ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "format () ",
      "hAlign () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize () ",
      "minFontSize () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "removeAllListeners (opt_type) ",
      "selectable () ",
      "textDirection () ",
      "textFormatter () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () "
    ]
  },
  "anychart.core.resource.TimeLine": {
    "functions": [
      "adjustFontSize () ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "disablePointerEvents () ",
      "dispose () ",
      "drawBottomLine () ",
      "drawLeftLine () ",
      "drawRightLine () ",
      "drawTopLine () ",
      "enabled (opt_value) ",
      "fill () ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "format () ",
      "getPixelBounds () ",
      "hAlign () ",
      "height (opt_value) ",
      "holidays (opt_value) ",
      "left (opt_value) ",
      "letterSpacing () ",
      "levelHeight () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize () ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minFontSize () ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "overlay (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "selectable () ",
      "stroke () ",
      "textDirection () ",
      "textFormatter () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.grids.Linear": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "drawFirstLine (opt_value) ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isHorizontal () ",
      "isMinor (opt_value) ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.grids.Linear3d": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "drawFirstLine (opt_value) ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isHorizontal () ",
      "isMinor (opt_value) ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.grids.Polar": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isMinor (opt_value) ",
      "isRadial () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.grids.Radar": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isMinor (opt_value) ",
      "isRadial () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.grids.Map": {
    "functions": [
      "dispose () ",
      "drawFirstLine () ",
      "drawLastLine () ",
      "enabled (opt_value) ",
      "evenFill () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorStroke () ",
      "oddFill () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.grids.MapSettings": {
    "functions": [
      "dispose () ",
      "drawFirstLine () ",
      "drawLastLine () ",
      "enabled () ",
      "evenFill () ",
      "horizontal (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorStroke () ",
      "oddFill () ",
      "removeAllListeners (opt_type) ",
      "stroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "vertical (opt_value) ",
      "zIndex () "
    ]
  },
  "anychart.core.grids.Stock": {
    "functions": [
      "axis (opt_value) ",
      "dispose () ",
      "drawFirstLine (opt_value) ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isHorizontal () ",
      "isMinor (opt_value) ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.Chart": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.bullet.Marker": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.SeparateChart": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Base": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "select () ",
      "selectMarkers (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.ChartController": {
    "functions": [
      "cancelDrawing () ",
      "dispose () ",
      "getSelectedAnnotation () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllAnnotations () ",
      "removeAllListeners (opt_type) ",
      "removeAnnotation (annotation) ",
      "select (annotation) ",
      "startDrawing (annotationTypeOrConfig) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () "
    ]
  },
  "anychart.core.annotations.AndrewsPitchfork": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "thirdValueAnchor () ",
      "thirdXAnchor () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Ellipse": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "hoverFill () ",
      "hoverGap () ",
      "hoverHatchFill () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "thirdValueAnchor () ",
      "thirdXAnchor () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.FibonacciBase": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "hoverTrend () ",
      "left (opt_value) ",
      "levels (opt_values) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "selectTrend () ",
      "stroke () ",
      "top (opt_value) ",
      "trend () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.FibonacciArc": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "hoverTrend () ",
      "left (opt_value) ",
      "levels (opt_values) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "selectTrend () ",
      "stroke () ",
      "top (opt_value) ",
      "trend () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.FibonacciFan": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "grid () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverGrid () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "hoverTrend () ",
      "left (opt_value) ",
      "levels (opt_values) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectGrid () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "selectTrend () ",
      "stroke () ",
      "timeLevels (opt_values) ",
      "top (opt_value) ",
      "trend () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.FibonacciRetracement": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "hoverTrend () ",
      "left (opt_value) ",
      "levels (opt_values) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "selectTrend () ",
      "stroke () ",
      "top (opt_value) ",
      "trend () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.FibonacciTimezones": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "hoverTrend () ",
      "left (opt_value) ",
      "levels (opt_values) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "selectTrend () ",
      "stroke () ",
      "top (opt_value) ",
      "trend () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.HorizontalLine": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.InfiniteLine": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Line": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Marker": {
    "functions": [
      "allowEdit () ",
      "anchor () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "hoverFill () ",
      "hoverGap () ",
      "hoverHatchFill () ",
      "hoverMarkers (opt_value) ",
      "hoverSize () ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markerType () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "offsetX () ",
      "offsetY () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "select () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectMarkers (opt_value) ",
      "selectSize () ",
      "selectStroke () ",
      "size () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Ray": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Rectangle": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "hoverFill () ",
      "hoverGap () ",
      "hoverHatchFill () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.TrendChannel": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "hoverFill () ",
      "hoverGap () ",
      "hoverHatchFill () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "thirdValueAnchor () ",
      "thirdXAnchor () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.Triangle": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill () ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "hoverFill () ",
      "hoverGap () ",
      "hoverHatchFill () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "secondValueAnchor () ",
      "secondXAnchor () ",
      "select () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "thirdValueAnchor () ",
      "thirdXAnchor () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueAnchor () ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.VerticalLine": {
    "functions": [
      "allowEdit () ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "color () ",
      "dispose () ",
      "enabled (opt_value) ",
      "getChart () ",
      "getPixelBounds () ",
      "getPlot () ",
      "getType () ",
      "height (opt_value) ",
      "hoverGap () ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "select () ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAnchor () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.annotations.PlotController": {
    "functions": [
      "add (annotationTypeOrConfig) ",
      "andrewsPitchfork (opt_config) ",
      "cancelDrawing () ",
      "dispose () ",
      "ellipse (opt_config) ",
      "enabled (opt_value) ",
      "fibonacciArc (opt_config) ",
      "fibonacciFan (opt_config) ",
      "fibonacciRetracement (opt_config) ",
      "fibonacciTimezones (opt_config) ",
      "fromJson (config) ",
      "fromXml (config) ",
      "getAnnotationAt (index) ",
      "getAnnotationsCount () ",
      "getSelectedAnnotation () ",
      "horizontalLine (opt_config) ",
      "infiniteLine (opt_config) ",
      "line (opt_config) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "marker (opt_config) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "ray (opt_config) ",
      "rectangle (opt_config) ",
      "removeAllAnnotations () ",
      "removeAllListeners (opt_type) ",
      "removeAnnotation (annotation) ",
      "removeAnnotationAt (index) ",
      "select (annotation) ",
      "startDrawing (annotationTypeOrConfig) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "trendChannel (opt_config) ",
      "triangle (opt_config) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "verticalLine (opt_config) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ChartWithSeries": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ChartWithOrthogonalScales": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.ChartWithAxes": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.Point": {
    "functions": [
      "exists () ",
      "get (field) ",
      "getChart () ",
      "getIndex () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (field, value) "
    ]
  },
  "anychart.core.SeriesPoint": {
    "functions": [
      "exists () ",
      "get (field) ",
      "getChart () ",
      "getIndex () ",
      "getSeries () ",
      "getStackValue () ",
      "getStackZero () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (field, value) "
    ]
  },
  "anychart.core.BubblePoint": {
    "functions": [
      "exists () ",
      "get (field) ",
      "getChart () ",
      "getIndex () ",
      "getPixelRadius () ",
      "getSeries () ",
      "getStackValue () ",
      "getStackZero () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (field, value) "
    ]
  },
  "anychart.core.series.RenderingSettings": {
    "functions": [
      "dispose () ",
      "finish () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "needsWidth () ",
      "needsZero () ",
      "point () ",
      "removeAllListeners (opt_type) ",
      "shapes (opt_value) ",
      "start () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "updatePoint () ",
      "yValues () "
    ]
  },
  "anychart.core.series.Base": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "isVertical () ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Cartesian": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Pareto": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Waterfall": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.HeatMap": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Mekko": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Radar": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformXY (xVal, yVal, opt_xSubRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Polar": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "closed () ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformXY (xVal, yVal, opt_xSubRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Map": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "allowPointsSelect (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "colorScale (opt_value) ",
      "connectMissingPoints () ",
      "curvature () ",
      "data (opt_value, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "endSize () ",
      "error (opt_value) ",
      "excludePoint (indexes) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "geoIdField (opt_value) ",
      "getExcludedPoints () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getPoint (index) ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hover (opt_indexOrIndexes) ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "includeAllPoints () ",
      "includePoint (indexes) ",
      "isVertical () ",
      "keepOnlyPoints (indexes) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "overlapMode (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "select (opt_indexOrIndexes) ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "selectionMode (opt_value) ",
      "seriesType (opt_value) ",
      "size () ",
      "startSize () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformXY (xCoord, yCoord) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.Stock": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_mappingSettings, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "isVertical () ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.series.StockScroller": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "clip (opt_value) ",
      "color () ",
      "connectMissingPoints () ",
      "data (opt_value, opt_mappingSettings, opt_csvSettings) ",
      "displayNegative () ",
      "dispose () ",
      "enabled (opt_value) ",
      "error (opt_value) ",
      "fallingFill () ",
      "fallingHatchFill () ",
      "fallingStroke () ",
      "fill () ",
      "getIndex () ",
      "getPixelBounds () ",
      "getPixelPointWidth () ",
      "getStat (key) ",
      "getType () ",
      "hatchFill () ",
      "height (opt_value) ",
      "highStroke () ",
      "hoverFallingFill () ",
      "hoverFallingHatchFill () ",
      "hoverFallingStroke () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverHighStroke () ",
      "hoverLabels (opt_value) ",
      "hoverLowStroke () ",
      "hoverMarkers (opt_value) ",
      "hoverMedianStroke () ",
      "hoverNegativeFill () ",
      "hoverNegativeHatchFill () ",
      "hoverNegativeStroke () ",
      "hoverOutlierMarkers (opt_value) ",
      "hoverRisingFill () ",
      "hoverRisingHatchFill () ",
      "hoverRisingStroke () ",
      "hoverSize () ",
      "hoverStemStroke () ",
      "hoverStroke () ",
      "hoverType () ",
      "hoverWhiskerStroke () ",
      "hoverWhiskerWidth () ",
      "id (opt_value) ",
      "isVertical () ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowStroke () ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "medianStroke () ",
      "meta (opt_object_or_key, opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "name (opt_value) ",
      "negativeFill () ",
      "negativeHatchFill () ",
      "negativeStroke () ",
      "outlierMarkers (opt_value) ",
      "pointWidth () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rendering (opt_value) ",
      "right (opt_value) ",
      "risingFill () ",
      "risingHatchFill () ",
      "risingStroke () ",
      "selectFallingFill () ",
      "selectFallingHatchFill () ",
      "selectFallingStroke () ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectHighStroke () ",
      "selectLabels (opt_value) ",
      "selectLowStroke () ",
      "selectMarkers (opt_value) ",
      "selectMedianStroke () ",
      "selectNegativeFill () ",
      "selectNegativeHatchFill () ",
      "selectNegativeStroke () ",
      "selectOutlierMarkers (opt_value) ",
      "selectRisingFill () ",
      "selectRisingHatchFill () ",
      "selectRisingStroke () ",
      "selectSize () ",
      "selectStemStroke () ",
      "selectStroke () ",
      "selectType () ",
      "selectWhiskerStroke () ",
      "selectWhiskerWidth () ",
      "seriesType (opt_value) ",
      "size () ",
      "stemStroke () ",
      "stepDirection () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transformX (value, opt_subRangeRatio) ",
      "transformY (value, opt_subRangeRatio) ",
      "type () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "whiskerStroke () ",
      "whiskerWidth () ",
      "width (opt_value) ",
      "xPointPosition () ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.CartesianBase": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.PyramidFunnelBase": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gauge.Cap": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "radius (opt_value) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gauge.pointers.Base": {
    "functions": [
      "axisIndex (opt_index) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gauge.pointers.Bar": {
    "functions": [
      "axisIndex (opt_index) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "radius (opt_value) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gauge.pointers.Knob": {
    "functions": [
      "axisIndex (opt_index) ",
      "bottomRadius (opt_value) ",
      "bottomRatio (opt_value) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "topRadius (opt_value) ",
      "topRatio (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticesCount (opt_value) ",
      "verticesCurvature (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gauge.pointers.Marker": {
    "functions": [
      "axisIndex (opt_index) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "radius (opt_value) ",
      "removeAllListeners (opt_type) ",
      "size (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "type (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.gauge.pointers.Needle": {
    "functions": [
      "axisIndex (opt_index) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "endRadius (opt_value) ",
      "endWidth (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "middleRadius (opt_value) ",
      "middleWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "startRadius (opt_value) ",
      "startWidth (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.GaugePointer": {
    "functions": [
      "exists () ",
      "get (field) ",
      "getChart () ",
      "getIndex () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (field, value) "
    ]
  },
  "anychart.core.linearGauge.ScaleBar": {
    "functions": [
      "colorScale (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "from (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "offset (opt_value) ",
      "points (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "to (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.Base": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.Bar": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.Led": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "colorScale (opt_value) ",
      "count (opt_value) ",
      "dataIndex (opt_index) ",
      "dimmer (opt_value) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "gap (opt_value) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "size (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.Marker": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "type (opt_value) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.RangeBar": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.Tank": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "emptyFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "emptyHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverEmptyFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverEmptyHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectEmptyFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectEmptyHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.linearGauge.pointers.Thermometer": {
    "functions": [
      "bulbPadding (opt_value) ",
      "bulbRadius (opt_value) ",
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dataIndex (opt_index) ",
      "dispose () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getGauge () ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hover (opt_index) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabel (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "label (opt_value) ",
      "legendItem (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "name (opt_value) ",
      "offset (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "select (opt_index, opt_event) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabel (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unhover () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect () ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.PiePoint": {
    "functions": [
      "exists () ",
      "exploded (opt_value) ",
      "get (field) ",
      "getChart () ",
      "getEndAngle () ",
      "getIndex () ",
      "getStartAngle () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (field, value) "
    ]
  },
  "anychart.core.RadarPolarChart": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getXScales () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "innerRadius (opt_value) ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startAngle (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_value) ",
      "xScale (opt_value) ",
      "yAxis (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.sparkline.series.Base": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.sparkline.series.ContinuousBase": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.sparkline.series.Area": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.sparkline.series.Column": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.sparkline.series.Line": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.sparkline.series.WinLoss": {
    "functions": [
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "dispose () ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.TagCloudStateSettings": {
    "functions": [
      "dispose () ",
      "fill () ",
      "fontFamily () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.TreeMapPoint": {
    "functions": [
      "exists () ",
      "get (var_args) ",
      "getChart () ",
      "getIndex () ",
      "getNode () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (var_args) "
    ]
  },
  "anychart.core.venn.Intersections": {
    "functions": [
      "dispose () ",
      "fill () ",
      "hatchFill () ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverLabels (opt_value) ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "removeAllListeners (opt_type) ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectLabels (opt_value) ",
      "selectMarkers (opt_value) ",
      "selectStroke () ",
      "stroke () ",
      "tooltip (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.pert.PertVisualElements": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.pert.Milestones": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dispose () ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverLabels (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectLabels (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shape (opt_value) ",
      "size (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "tooltip (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.pert.Tasks": {
    "functions": [
      "color (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dispose () ",
      "dummyFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "dummyStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverLowerLabels (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "hoverUpperLabels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "lowerLabels (opt_value) ",
      "removeAllListeners (opt_type) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectLowerLabels (opt_value) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectUpperLabels (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "tooltip (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "upperLabels (opt_value) "
    ]
  },
  "anychart.core.pert.CriticalPath": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "milestones (opt_value) ",
      "removeAllListeners (opt_type) ",
      "tasks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.MapPoint": {
    "functions": [
      "exists () ",
      "get (field) ",
      "getChart () ",
      "getCurrentChart () ",
      "getId () ",
      "getIndex () ",
      "getParentChart () ",
      "getProperties () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "selected (opt_value) ",
      "set (field, value) "
    ]
  },
  "anychart.core.ChoroplethPoint": {
    "functions": [
      "crs (opt_crs) ",
      "exists () ",
      "get (field) ",
      "getChart () ",
      "getFeatureBounds () ",
      "getFeatureProp () ",
      "getIndex () ",
      "getSeries () ",
      "getStackValue () ",
      "getStackZero () ",
      "getStat (key) ",
      "hovered (opt_value) ",
      "middleX (opt_value) ",
      "middleY (opt_value) ",
      "scaleFactor (opt_scale) ",
      "selected (opt_value) ",
      "set (field, value) ",
      "translate (dx, dy) ",
      "translation (opt_dx, opt_dy) "
    ]
  },
  "anychart.core.stock.Grouping": {
    "functions": [
      "dispose () ",
      "enabled (opt_value) ",
      "forced (opt_value) ",
      "getCurrentDataInterval () ",
      "isGrouped () ",
      "levels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxVisiblePoints (opt_value) ",
      "minPixPerPoint (opt_value) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.stock.Controller": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.core.stock.indicators.Base": {
    "functions": [
      "dispose () "
    ]
  },
  "anychart.core.stock.indicators.Aroon": {
    "functions": [
      "dispose () ",
      "downSeries (opt_type) ",
      "period (opt_value) ",
      "upSeries (opt_type) "
    ]
  },
  "anychart.core.stock.indicators.RoC": {
    "functions": [
      "dispose () ",
      "period (opt_value) ",
      "series (opt_type) "
    ]
  },
  "anychart.core.stock.indicators.Stochastic": {
    "functions": [
      "dMAType (opt_value) ",
      "dPeriod (opt_value) ",
      "dSeries (opt_type) ",
      "dispose () ",
      "kMAPeriod (opt_value) ",
      "kMAType (opt_value) ",
      "kPeriod (opt_value) ",
      "kSeries (opt_type) "
    ]
  },
  "anychart.core.stock.Plot": {
    "functions": [
      "addSeries (var_args) ",
      "adl (mapping, opt_seriesType) ",
      "ama (mapping, opt_period, opt_fastPeriod, opt_slowPeriod, opt_seriesType) ",
      "annotations (opt_value) ",
      "area (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "aroon (mapping, opt_period, opt_upSeriesType, opt_downSeriesType) ",
      "atr (mapping, opt_period, opt_seriesType) ",
      "background (opt_value) ",
      "bbands (mapping, opt_period, opt_deviation, opt_middleSeriesType, opt_upperSeriesType, opt_lowerSeriesType) ",
      "bbandsB (mapping, opt_period, opt_deviation, opt_seriesType) ",
      "bbandsWidth (mapping, opt_period, opt_deviation, opt_seriesType) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "candlestick (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "cci (mapping, opt_period, opt_seriesType) ",
      "cho (mapping, opt_fastPeriod, opt_slowPeriod, opt_maType, opt_seriesType) ",
      "cmf (mapping, opt_period, opt_seriesType) ",
      "column (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "dateTimeHighlighter (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "dmi (mapping, opt_period, opt_adxPeriod, opt_useWildersSmoothing, opt_pdiSeriesType, opt_ndiSeriesType, opt_adxSeriesType) ",
      "ema (mapping, opt_period, opt_seriesType) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hilo (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "jumpLine (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "kdj (mapping, opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType, opt_kMultiplier, opt_dMultiplier, opt_kSeriesType, opt_dSeriesType, opt_jSeriesType) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "line (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "macd (mapping, opt_fastPeriod, opt_slowPeriod, opt_signalPeriod, opt_macdSeriesType, opt_signalSeriesType, opt_histogramSeriesType) ",
      "marker (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "mma (mapping, opt_period, opt_seriesType) ",
      "ohlc (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "rangeColumn (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "rangeSplineArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "rangeStepArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "roc (mapping, opt_period, opt_seriesType) ",
      "rsi (mapping, opt_period, opt_seriesType) ",
      "sma (mapping, opt_period, opt_seriesType) ",
      "spline (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "splineArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stepArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stepLine (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stick (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stochastic (mapping, opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType, opt_kSeriesType, opt_dSeriesType) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.core.stock.Scroller": {
    "functions": [
      "addSeries (var_args) ",
      "adl (mapping, opt_seriesType) ",
      "allowRangeChange (opt_value) ",
      "ama (mapping, opt_period, opt_fastPeriod, opt_slowPeriod, opt_seriesType) ",
      "area (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "aroon (mapping, opt_period, opt_upSeriesType, opt_downSeriesType) ",
      "atr (mapping, opt_period, opt_seriesType) ",
      "autoHide (opt_value) ",
      "bbands (mapping, opt_period, opt_deviation, opt_middleSeriesType, opt_upperSeriesType, opt_lowerSeriesType) ",
      "bbandsB (mapping, opt_period, opt_deviation, opt_seriesType) ",
      "bbandsWidth (mapping, opt_period, opt_deviation, opt_seriesType) ",
      "candlestick (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "cci (mapping, opt_period, opt_seriesType) ",
      "cho (mapping, opt_fastPeriod, opt_slowPeriod, opt_maType, opt_seriesType) ",
      "cmf (mapping, opt_period, opt_seriesType) ",
      "column (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "dmi (mapping, opt_period, opt_adxPeriod, opt_useWildersSmoothing, opt_pdiSeriesType, opt_ndiSeriesType, opt_adxSeriesType) ",
      "ema (mapping, opt_period, opt_seriesType) ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "jumpLine (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "kdj (mapping, opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType, opt_kMultiplier, opt_dMultiplier, opt_kSeriesType, opt_dSeriesType, opt_jSeriesType) ",
      "line (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "macd (mapping, opt_fastPeriod, opt_slowPeriod, opt_signalPeriod, opt_macdSeriesType, opt_signalSeriesType, opt_histogramSeriesType) ",
      "marker (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "maxHeight (opt_value) ",
      "minHeight (opt_value) ",
      "mma (mapping, opt_period, opt_seriesType) ",
      "ohlc (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "orientation (opt_value) ",
      "outlineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "rangeColumn (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "rangeSplineArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "rangeStepArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "roc (mapping, opt_period, opt_seriesType) ",
      "rsi (mapping, opt_period, opt_seriesType) ",
      "selectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "sma (mapping, opt_period, opt_seriesType) ",
      "spline (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "splineArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stepArea (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stepLine (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stick (opt_data, opt_mappingSettings, opt_csvSettings) ",
      "stochastic (mapping, opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType, opt_kSeriesType, opt_dSeriesType) ",
      "thumbs (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xAxis (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.performance": {
    "functions": [
      "clear () ",
      "end (label) ",
      "printTree (opt_level, opt_collapsed) ",
      "start (label, opt_level) "
    ]
  },
  "anychart.standalones": {
    "functions": [
      "background () ",
      "colorRange () ",
      "dataGrid () ",
      "label () ",
      "labelsFactory () ",
      "legend () ",
      "markersFactory () ",
      "projectTimeline () ",
      "resourceList (opt_data) ",
      "resourceTimeline () ",
      "scroller () ",
      "table (opt_rowsCount, opt_colsCount) ",
      "title () "
    ]
  },
  "anychart.standalones.axes": {
    "functions": [
      "linear () ",
      "polar () ",
      "radar () ",
      "radial () "
    ]
  },
  "anychart.standalones.axes.Linear": {
    "functions": [
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "isHorizontal () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "orientation (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "staggerLines (opt_value) ",
      "staggerMaxLines (opt_value) ",
      "staggerMode (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.axes.Polar": {
    "functions": [
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getRemainingBounds () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "startAngle (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.axes.Radar": {
    "functions": [
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "getRemainingBounds () ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "startAngle (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.axes.Radial": {
    "functions": [
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "innerRadius (opt_value) ",
      "labels (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "overlapMode (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "startAngle (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.axisMarkers": {
    "functions": [
      "line () ",
      "range () ",
      "text () "
    ]
  },
  "anychart.standalones.axisMarkers.Line": {
    "functions": [
      "axis (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "value (opt_newValue) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.axisMarkers.Range": {
    "functions": [
      "axis (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "from (opt_newValue) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "to (opt_newValue) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.axisMarkers.Text": {
    "functions": [
      "align (opt_value) ",
      "anchor (opt_value) ",
      "axis (opt_value) ",
      "container (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "isHorizontal () ",
      "layout (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "offsetX (opt_newValue) ",
      "offsetY (opt_newValue) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "scale (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "value (opt_newValue) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.grids": {
    "functions": [
      "linear () ",
      "linear3d () ",
      "polar () ",
      "radar () "
    ]
  },
  "anychart.standalones.grids.Linear": {
    "functions": [
      "axis (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawFirstLine (opt_value) ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isHorizontal () ",
      "isMinor (opt_value) ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.grids.Linear3d": {
    "functions": [
      "axis (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawFirstLine (opt_value) ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "isHorizontal () ",
      "isMinor (opt_value) ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.grids.Polar": {
    "functions": [
      "axis (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "innerRadius (opt_value) ",
      "isMinor (opt_value) ",
      "isRadial () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "startAngle (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.grids.Radar": {
    "functions": [
      "axis (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawLastLine (opt_value) ",
      "enabled (opt_value) ",
      "evenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "innerRadius (opt_value) ",
      "isMinor (opt_value) ",
      "isRadial () ",
      "layout (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "oddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "startAngle (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.Background": {
    "functions": [
      "bottom (opt_value) ",
      "bottomStroke () ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "container (opt_value) ",
      "cornerType () ",
      "corners (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "left (opt_value) ",
      "leftStroke () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rightStroke () ",
      "stroke () ",
      "top (opt_value) ",
      "topStroke () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.ColorRange": {
    "functions": [
      "align (opt_value) ",
      "colorLineSize (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawFirstLabel (opt_value) ",
      "drawLastLabel (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "isHorizontal () ",
      "labels (opt_value) ",
      "length (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "marker (opt_value) ",
      "minorLabels (opt_value) ",
      "minorTicks (opt_value) ",
      "orientation (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "scale (opt_value) ",
      "staggerLines (opt_value) ",
      "staggerMaxLines (opt_value) ",
      "staggerMode (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "ticks (opt_value) ",
      "title (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.DataGrid": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "column (opt_indexOrValue, opt_value) ",
      "columnStroke (opt_value) ",
      "container (opt_value) ",
      "data (opt_value) ",
      "defaultRowHeight (opt_value) ",
      "dispose () ",
      "draw () ",
      "editStructurePreviewDashStroke (opt_value) ",
      "editStructurePreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editStructurePreviewStroke (opt_value) ",
      "editing (opt_value) ",
      "enabled (opt_value) ",
      "endIndex (opt_value) ",
      "getPixelBounds () ",
      "getVisibleItems () ",
      "headerHeight (opt_value) ",
      "height (opt_value) ",
      "horizontalOffset (opt_value) ",
      "horizontalScrollBar (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowHoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowSelectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "startIndex (opt_value) ",
      "titleHeight (opt_value) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalOffset (opt_value) ",
      "verticalScrollBar (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.Label": {
    "functions": [
      "adjustFontSize (opt_adjustOrAdjustByWidth, opt_adjustByHeight) ",
      "anchor (opt_value) ",
      "background (opt_value) ",
      "container (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize (opt_value) ",
      "minFontSize (opt_value) ",
      "offsetX (opt_value) ",
      "offsetY (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "position (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.LabelsFactory": {
    "functions": [
      "add (formatProvider, positionProvider, opt_index) ",
      "adjustFontSize () ",
      "anchor () ",
      "background (opt_value) ",
      "clear (opt_index) ",
      "clip () ",
      "connectorStroke () ",
      "container (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "format () ",
      "getLabel (index) ",
      "getLabelsCount () ",
      "hAlign () ",
      "height () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxFontSize () ",
      "measure (formatProviderOrLabel, opt_positionProvider, opt_settings, opt_cacheIndex) ",
      "measureWithTransform (formatProviderOrLabel, opt_positionProvider, opt_settings, opt_cacheIndex) ",
      "minFontSize () ",
      "offsetX () ",
      "offsetY () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "position () ",
      "positionFormatter () ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation () ",
      "selectable () ",
      "textDirection () ",
      "textFormatter () ",
      "textIndent () ",
      "textOverflow () ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.Legend": {
    "functions": [
      "align (opt_value) ",
      "background (opt_value) ",
      "container (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "drag (opt_value) ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getPixelBounds () ",
      "getRemainingBounds () ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "hoverCursor (opt_value) ",
      "iconSize (opt_value) ",
      "iconTextSpacing (opt_value) ",
      "inverted (opt_value) ",
      "items (opt_value) ",
      "itemsFormat (opt_value) ",
      "itemsFormatter (opt_value) ",
      "itemsLayout (opt_value) ",
      "itemsSource (opt_value) ",
      "itemsSourceMode (opt_value) ",
      "itemsSpacing (opt_value) ",
      "itemsTextFormatter (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "paginator (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "position (opt_value) ",
      "positionMode (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "title (opt_value) ",
      "titleFormat (opt_value) ",
      "titleFormatter (opt_value) ",
      "titleSeparator (opt_value) ",
      "tooltip (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.LegendItem": {
    "functions": [
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getContentBounds () ",
      "getHeight () ",
      "getTextElement () ",
      "getWidth () ",
      "hAlign (opt_value) ",
      "iconFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "iconHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "iconStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "iconTextSpacing (opt_value) ",
      "iconType (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectable (opt_value) ",
      "text (opt_value) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "x (opt_value) ",
      "y (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.MarkersFactory": {
    "functions": [
      "add (positionProvider, opt_index) ",
      "anchor (opt_value) ",
      "clear (opt_index) ",
      "container (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "measure (positionProvider) ",
      "offsetX (opt_value) ",
      "offsetY (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "position (opt_value) ",
      "positionFormatter (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation (opt_value) ",
      "size (opt_value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "type (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.ProjectTimeline": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baseFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baseStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "baselineAbove (opt_value) ",
      "baselineFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baselineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "columnStroke (opt_value) ",
      "connectorFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "connectorPreviewStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "container (opt_value) ",
      "data (opt_value) ",
      "defaultRowHeight (opt_value) ",
      "dispose () ",
      "draw () ",
      "editConnectorThumbFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editConnectorThumbStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editFinishConnectorMarkerHorizontalOffset (opt_value) ",
      "editFinishConnectorMarkerSize (opt_value) ",
      "editFinishConnectorMarkerType (opt_value) ",
      "editFinishConnectorMarkerVerticalOffset (opt_value) ",
      "editIntervalThumbFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editIntervalThumbStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editIntervalWidth (opt_value) ",
      "editPreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editPreviewStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editProgressFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editProgressStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editStartConnectorMarkerHorizontalOffset (opt_value) ",
      "editStartConnectorMarkerSize (opt_value) ",
      "editStartConnectorMarkerType (opt_value) ",
      "editStartConnectorMarkerVerticalOffset (opt_value) ",
      "editStructurePreviewDashStroke (opt_value) ",
      "editStructurePreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editStructurePreviewStroke (opt_value) ",
      "editing (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "header (opt_value) ",
      "headerHeight (opt_value) ",
      "height (opt_value) ",
      "horizontalScrollBar (opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "maximumGap (opt_value) ",
      "milestoneFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "milestoneStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minimumGap (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "parentFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "progressFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "progressStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowHoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowSelectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "scale (opt_value) ",
      "selectedElementFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectedElementStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalScrollBar (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.ResourceTimeline": {
    "functions": [
      "backgroundFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baseFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baseStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "baselineAbove (opt_value) ",
      "baselineFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "baselineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "columnStroke (opt_value) ",
      "connectorFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "connectorPreviewStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "container (opt_value) ",
      "data (opt_value) ",
      "defaultRowHeight (opt_value) ",
      "dispose () ",
      "draw () ",
      "editConnectorThumbFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editConnectorThumbStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editFinishConnectorMarkerHorizontalOffset (opt_value) ",
      "editFinishConnectorMarkerSize (opt_value) ",
      "editFinishConnectorMarkerType (opt_value) ",
      "editFinishConnectorMarkerVerticalOffset (opt_value) ",
      "editIntervalThumbFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editIntervalThumbStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editIntervalWidth (opt_value) ",
      "editPreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editPreviewStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editProgressFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editProgressStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "editStartConnectorMarkerHorizontalOffset (opt_value) ",
      "editStartConnectorMarkerSize (opt_value) ",
      "editStartConnectorMarkerType (opt_value) ",
      "editStartConnectorMarkerVerticalOffset (opt_value) ",
      "editStructurePreviewDashStroke (opt_value) ",
      "editStructurePreviewFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "editStructurePreviewStroke (opt_value) ",
      "editing (opt_value) ",
      "enabled (opt_value) ",
      "getPixelBounds () ",
      "header (opt_value) ",
      "headerHeight (opt_value) ",
      "height (opt_value) ",
      "horizontalScrollBar (opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "maximumGap (opt_value) ",
      "milestoneFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "milestoneStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minimumGap (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "parentFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "parentStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "progressFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "progressStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowHoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowSelectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "scale (opt_value) ",
      "selectedElementFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectedElementStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalScrollBar (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.ResourceList": {
    "functions": [
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "container (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "descriptions (opt_value) ",
      "dispose () ",
      "draw () ",
      "drawBottomLine () ",
      "drawLeftLine () ",
      "drawRightLine () ",
      "drawTopLine () ",
      "enabled (opt_value) ",
      "evenFill () ",
      "getPixelBounds () ",
      "height (opt_value) ",
      "images (opt_value) ",
      "left (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxRowHeight () ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minRowHeight () ",
      "minWidth (opt_value) ",
      "names (opt_value) ",
      "oddFill () ",
      "overlay (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowHeight () ",
      "stroke () ",
      "tags (opt_value) ",
      "target (opt_value) ",
      "top (opt_value) ",
      "types (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalScrollBarPosition (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.Scroller": {
    "functions": [
      "allowRangeChange (opt_value) ",
      "autoHide (opt_value) ",
      "container (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "endRatio (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getRemainingBounds () ",
      "height (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "minHeight (opt_value) ",
      "orientation (opt_value) ",
      "outlineStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "selectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "setRange (startRatio, endRatio) ",
      "startRatio (opt_value) ",
      "thumbs (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.Table": {
    "functions": [
      "border (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cellBorder (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "cellFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "cellPadding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "colsCount (opt_value) ",
      "colsMaxWidth (opt_value) ",
      "colsMinWidth (opt_value) ",
      "colsWidth (opt_value) ",
      "container (opt_value) ",
      "contents (opt_tableValues, opt_demergeCells) ",
      "disablePointerEvents (opt_value) ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor (opt_value) ",
      "fontDecoration (opt_value) ",
      "fontFamily (opt_value) ",
      "fontOpacity (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getCell (row, col) ",
      "getCol (col) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getRow (row) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "hAlign (opt_value) ",
      "height (opt_value) ",
      "left (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowEvenFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowOddFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowsCount (opt_value) ",
      "rowsHeight (opt_value) ",
      "rowsMaxHeight (opt_value) ",
      "rowsMinHeight (opt_value) ",
      "saveAsCsv (opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_filename) ",
      "selectable (opt_value) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "textDirection (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "toCsv (opt_csvSettings) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml (opt_value) ",
      "vAlign (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.standalones.Title": {
    "functions": [
      "adjustFontSize () ",
      "align () ",
      "background (opt_value) ",
      "container (opt_value) ",
      "disablePointerEvents () ",
      "dispose () ",
      "draw () ",
      "enabled (opt_value) ",
      "fontColor () ",
      "fontDecoration () ",
      "fontFamily () ",
      "fontOpacity () ",
      "fontSize () ",
      "fontStyle () ",
      "fontVariant () ",
      "fontWeight () ",
      "getRemainingBounds () ",
      "hAlign () ",
      "height () ",
      "letterSpacing () ",
      "lineHeight () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxFontSize () ",
      "minFontSize () ",
      "orientation () ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "parentBounds (opt_boundsOrLeft, opt_top, opt_width, opt_height) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "rotation () ",
      "selectable () ",
      "text () ",
      "textDirection () ",
      "textIndent () ",
      "textOverflow () ",
      "textSettings (opt_objectOrName, opt_value) ",
      "textWrap () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "useHtml () ",
      "vAlign () ",
      "width () ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.axes": {
    "functions": [
      "linear () ",
      "polar () ",
      "radar () ",
      "radial () "
    ]
  },
  "anychart.axisMarkers": {
    "functions": [
      "line () ",
      "range () ",
      "text () "
    ]
  },
  "anychart.grids": {
    "functions": [
      "linear () ",
      "linear3d () ",
      "polar () ",
      "radar () "
    ]
  },
  "anychart.color": {
    "functions": [
      "bipolarHueProgression (opt_color1, opt_color2, opt_count) ",
      "blend (color1, color2, opt_factor) ",
      "blendedHueProgression (opt_color1, opt_color2, opt_count) ",
      "darken (fillOrStroke, opt_factor) ",
      "lighten (fillOrStroke, opt_factor) ",
      "setOpacity (strokeOrFill, opacity, opt_isFill) ",
      "setThickness (stroke, thickness, opt_opacity) ",
      "singleHueProgression (opt_color, opt_count, opt_startOrTargetLightness, opt_endLightness) "
    ]
  },
  "anychart.ui": {
    "functions": [
      "background () ",
      "colorRange () ",
      "contextMenu () ",
      "dataGrid () ",
      "ganttToolbar () ",
      "label () ",
      "labelsFactory () ",
      "legend () ",
      "markersFactory () ",
      "preloader () ",
      "projectTimeline () ",
      "rangePicker () ",
      "rangeSelector () ",
      "resourceTimeline () ",
      "scroller () ",
      "table (opt_rowsCount, opt_colsCount) ",
      "title () ",
      "zoom () "
    ]
  },
  "anychart.ui.ContextMenu": {
    "functions": [
      "addClassName (className) ",
      "attach (target, opt_capture) ",
      "detach (opt_target, opt_capture) ",
      "enabled (opt_value) ",
      "hide () ",
      "items (opt_value) ",
      "itemsFormatter (opt_value) ",
      "itemsProvider (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeClassName (className) ",
      "serialize () ",
      "setup (var_args) ",
      "show (x, y) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) "
    ]
  },
  "anychart.ui.toolbar.Toolbar": {
    "functions": [
      "container (opt_element) ",
      "draw () ",
      "target (opt_value) "
    ]
  },
  "anychart.ui.GanttToolbar": {
    "functions": [
      "container (opt_element) ",
      "draw () ",
      "printPaperSizes (opt_value) ",
      "target (opt_value) "
    ]
  },
  "anychart.ui.Preloader": {
    "functions": [
      "decorate (element) ",
      "render (opt_parentElement) ",
      "visible (opt_value) "
    ]
  },
  "anychart.ui.RangePicker": {
    "functions": [
      "decorate (element) ",
      "dispose () ",
      "format (opt_format) ",
      "fromLabelText (opt_value) ",
      "getElement () ",
      "render (opt_parentElement) ",
      "target (chart) ",
      "toLabelText (opt_value) "
    ]
  },
  "anychart.ui.RangeSelector": {
    "functions": [
      "decorate (element) ",
      "dispose () ",
      "getElement () ",
      "ranges (opt_ranges) ",
      "render (opt_parentElement) ",
      "target (chart) ",
      "zoomLabelText (opt_value) "
    ]
  },
  "anychart.ui.Zoom": {
    "functions": [
      "decorate (element) ",
      "dispose () ",
      "render (opt_parentElement) ",
      "target (chart) "
    ]
  },
  "anychart.data": {
    "functions": [
      "buildMapping (dataSet, fromIndex, toIndex, names, opt_keys) ",
      "mapAsTable (data, opt_mode, opt_seriesCount) ",
      "parseText (text, opt_settings) ",
      "set (opt_data, opt_settings) ",
      "table (opt_keyColumnIndex, opt_dateTimePattern, opt_timeOffset, opt_baseDate, opt_locale) ",
      "tree (opt_data, opt_fillMethodOrCsvMapping, opt_csvSettings) "
    ]
  },
  "anychart.data.csv": {
    "functions": [
      "parser () "
    ]
  },
  "anychart.data.csv.Parser": {
    "functions": [
      "columnsSeparator (opt_value) ",
      "ignoreFirstRow (opt_value) ",
      "ignoreTrailingSpaces (opt_value) ",
      "parse (data, opt_itemsProcessor, opt_async) ",
      "rowsSeparator (opt_value) "
    ]
  },
  "anychart.data.Iterator": {
    "functions": [
      "advance () ",
      "get (fieldName) ",
      "getIndex () ",
      "getRowsCount () ",
      "meta (name, opt_value) ",
      "reset () ",
      "select (index) "
    ]
  },
  "anychart.data.View": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getDataSets () ",
      "getIterator () ",
      "getRowsCount () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.ConcatView": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getDataSets () ",
      "getIterator () ",
      "getRowsCount () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.FilterView": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getDataSets () ",
      "getIterator () ",
      "getRowsCount () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.Mapping": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getArrayMapping () ",
      "getDataSets () ",
      "getIndexMapping () ",
      "getIterator () ",
      "getObjectMapping () ",
      "getRowsCount () ",
      "getSimpleRowMapping () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.ParetoMapping": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getArrayMapping () ",
      "getDataSets () ",
      "getIndexMapping () ",
      "getIterator () ",
      "getObjectMapping () ",
      "getRowsCount () ",
      "getSimpleRowMapping () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.PieView": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getDataSets () ",
      "getIterator () ",
      "getRowsCount () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.Set": {
    "functions": [
      "append (var_args) ",
      "data (opt_value, opt_settings) ",
      "dispose () ",
      "getRowsCount () ",
      "insert (row, opt_index) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mapAs (opt_arrayMapping, opt_objectMapping, opt_defaultProps, opt_indexProps) ",
      "remove (index) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.SortView": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getDataSets () ",
      "getIterator () ",
      "getRowsCount () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.TableIterator": {
    "functions": [
      "advance () ",
      "get (field) ",
      "getIndex () ",
      "getKey () ",
      "meta (name, opt_value) ",
      "reset () "
    ]
  },
  "anychart.data.TableSelectable": {
    "functions": [
      "getIterator () ",
      "search (key, opt_mode) ",
      "select (startDate, endDate, opt_intervalUnit, opt_intervalCount) ",
      "selectAll (opt_intervalUnit, opt_intervalCount) "
    ]
  },
  "anychart.data.TableComputer": {
    "functions": [
      "addOutputField (name, opt_uid) ",
      "dispose () ",
      "getFieldIndex (name) ",
      "setCalculationFunction (value) ",
      "setContext (value) ",
      "setStartFunction (value) "
    ]
  },
  "anychart.data.TableMapping": {
    "functions": [
      "addField (name, column, opt_typeOrCalculator, opt_context) ",
      "createSelectable () ",
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.Table": {
    "functions": [
      "addData (rawData, opt_removeFromStart, opt_csvSettings) ",
      "createComputer (opt_mappingSettingsOrMapping) ",
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mapAs (opt_fields) ",
      "remove (opt_start, opt_end) ",
      "removeAllListeners (opt_type) ",
      "removeFirst (opt_count) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.Traverser": {
    "functions": [
      "advance () ",
      "current () ",
      "get (key) ",
      "getDepth () ",
      "meta (key, opt_value) ",
      "nodeYieldCondition (opt_value) ",
      "reset () ",
      "set (key, value) ",
      "toArray () ",
      "traverseChildrenCondition (opt_value) "
    ]
  },
  "anychart.data.TreeView": {
    "functions": [
      "addChild (child) ",
      "addChildAt (child, index) ",
      "addData (data, opt_fillMethodOrCsvMapping, opt_csvSettingsOrDeps) ",
      "dispose () ",
      "getChildAt (index) ",
      "getChildren () ",
      "getTraverser () ",
      "indexOfChild (child) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "numChildren () ",
      "removeAllListeners (opt_type) ",
      "removeChild (child) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "search (soughtField, valueOrEvaluator, opt_comparisonFnOrEvaluatorContext) ",
      "searchItems (soughtField, valueOrEvaluator, opt_comparisonFnOrEvaluatorContext) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.Tree": {
    "functions": [
      "addChild (child) ",
      "addChildAt (child, index) ",
      "addData (data, opt_fillMethodOrCsvMapping, opt_csvSettingsOrDeps) ",
      "createIndexOn (field, opt_asString) ",
      "dispatchEvents (opt_val) ",
      "dispose () ",
      "getChildAt (index) ",
      "getChildren () ",
      "getTraverser () ",
      "indexOfChild (child) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mapAs (opt_mapping) ",
      "numChildren () ",
      "removeAllListeners (opt_type) ",
      "removeChild (child) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "removeIndexOn (field) ",
      "search (soughtField, valueOrEvaluator, opt_comparisonFnOrEvaluatorContext) ",
      "searchItems (soughtField, valueOrEvaluator, opt_comparisonFnOrEvaluatorContext) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.data.ParetoSeriesMapping": {
    "functions": [
      "concat (otherView) ",
      "derive () ",
      "dispose () ",
      "filter (fieldName, func) ",
      "find (fieldName, fieldValue) ",
      "get (rowIndex, fieldName) ",
      "getArrayMapping () ",
      "getDataSets () ",
      "getIndexMapping () ",
      "getIterator () ",
      "getObjectMapping () ",
      "getRowsCount () ",
      "getSimpleRowMapping () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "meta (index, name, opt_value) ",
      "removeAllListeners (opt_type) ",
      "row (rowIndex, opt_value) ",
      "set (rowIndex, fieldName, value) ",
      "sort (fieldName, opt_comparatorOrOrder) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.math": {
    "functions": [
      "cycledQueue (opt_lengthLimit) ",
      "rect (x, y, w, h) "
    ]
  },
  "anychart.math.Rect": {
    "functions": [
      "getBottom () ",
      "getHeight () ",
      "getLeft () ",
      "getRight () ",
      "getTop () ",
      "getWidth () "
    ]
  },
  "anychart.math.CycledQueue": {
    "functions": [
      "clear (opt_newLengthLimit) ",
      "dequeue () ",
      "enqueue (item) ",
      "get (index) ",
      "getLength () "
    ]
  },
  "anychart.math.adl": {
    "functions": [
      "calculate (context, close, high, low, volume) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping) ",
      "initContext () ",
      "startFunction (context) "
    ]
  },
  "anychart.math.ama": {
    "functions": [
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period, opt_fastPeriod, opt_slowPeriod) ",
      "initContext (opt_period, opt_fastPeriod, opt_slowPeriod) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.sma": {
    "functions": [
      "calculate (context, value) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.atr": {
    "functions": [
      "calculate (context, close, high, low) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.aroon": {
    "functions": [
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.bbands": {
    "functions": [
      "calculate (context, value) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period, opt_deviation) ",
      "initContext (opt_period, opt_deviation) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.bbandsB": {
    "functions": [
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period, opt_deviation) ",
      "initContext (opt_period, opt_deviation) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.bbandsWidth": {
    "functions": [
      "calculate (context, value) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period, opt_deviation) ",
      "initContext (opt_period, opt_deviation) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.cci": {
    "functions": [
      "calculate (context, close, high, low) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.ema": {
    "functions": [
      "calculate (context, value) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.cho": {
    "functions": [
      "calculate (context, close, high, low, volume) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_fastPeriod, opt_slowPeriod, opt_maType) ",
      "initContext (opt_fastPeriod, opt_slowPeriod, opt_maType) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.cmf": {
    "functions": [
      "calculate (context, close, high, low, volume) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.dmi": {
    "functions": [
      "calculate (context, close, high, low) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period, opt_adxPeriod, opt_useWildersSmoothing) ",
      "initContext (opt_period, opt_adxPeriod, opt_useWildersSmoothing) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.stochastic": {
    "functions": [
      "calculate (context, closeValue, highValue, lowValue) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType) ",
      "initContext (opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.kdj": {
    "functions": [
      "calculate (context, close, high, low) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType, opt_kMultiplier, opt_dMultiplier) ",
      "initContext (opt_kPeriod, opt_kMAPeriod, opt_dPeriod, opt_kMAType, opt_dMAType, opt_kMultiplier, opt_dMultiplier) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.macd": {
    "functions": [
      "calculate (context, value) ",
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_fastPeriod, opt_slowPeriod, opt_signalPeriod) ",
      "initContext (opt_fastPeriod, opt_slowPeriod, opt_signalPeriod) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.mma": {
    "functions": [
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.rsi": {
    "functions": [
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.math.roc": {
    "functions": [
      "calculationFunction (row, context) ",
      "createComputer (mapping, opt_period) ",
      "initContext (opt_period) ",
      "startFunction (context) "
    ]
  },
  "anychart.utils": {
    "functions": [
      "defaultDateFormatter (timestamp) ",
      "formatDateTime (date, pattern) ",
      "hideTooltips (opt_force) ",
      "htmlTableFromCsv (csv, opt_title, opt_asString, opt_csvSettings) ",
      "json2xml (json, opt_rootNodeName, opt_returnAsXmlNode) ",
      "printUtilsBoolean () ",
      "xml2json (xml) "
    ]
  },
  "anychart.gauges": {
    "functions": [
      "circular (opt_data, opt_csvSettings) ",
      "led (opt_data, opt_csvSettings) ",
      "linear (opt_data, opt_csvSettings) ",
      "tank (opt_data, opt_csvSettings) ",
      "thermometer (opt_data, opt_csvSettings) "
    ]
  },
  "anychart.graphics": {
    "functions": [
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clip (opt_leftOrShape, opt_top, opt_width, opt_height) ",
      "create (opt_container, opt_width, opt_height) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "hatchFill (opt_type, opt_color, opt_thickness, opt_size) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "layer () ",
      "path () ",
      "patternFill (bounds) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "server (opt_address) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "type () ",
      "updateReferences () ",
      "useAbsoluteReferences (opt_value) "
    ]
  },
  "anychart.graphics.math.Coordinate": {
    "functions": [
      "getX () ",
      "getY () "
    ]
  },
  "anychart.graphics.math.Rect": {
    "functions": [
      "getBottom () ",
      "getHeight () ",
      "getLeft () ",
      "getRight () ",
      "getTop () ",
      "getWidth () "
    ]
  },
  "anychart.graphics.vector": {
    "functions": [
      "normalizeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "normalizeHatchFill (opt_patternFillOrType, opt_color, opt_thickness, opt_size) ",
      "normalizeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) "
    ]
  },
  "anychart.graphics.vector.Anchor": {
    "constant": [
      "CENTER",
      "CENTER_BOTTOM",
      "CENTER_TOP",
      "LEFT_BOTTOM",
      "LEFT_CENTER",
      "LEFT_TOP",
      "RIGHT_BOTTOM",
      "RIGHT_CENTER",
      "RIGHT_TOP"
    ]
  },
  "anychart.graphics.vector.Cursor": {
    "constant": [
      "CROSSHAIR",
      "DEFAULT",
      "E_RESIZE",
      "HELP",
      "MOVE",
      "NE_RESIZE",
      "NW_RESIZE",
      "N_RESIZE",
      "POINTER",
      "SE_RESIZE",
      "SW_RESIZE",
      "S_RESIZE",
      "TEXT",
      "WAIT",
      "W_RESIZE"
    ]
  },
  "anychart.graphics.vector.StrokeLineJoin": {
    "constant": [
      "BEVEL",
      "MITER",
      "ROUND"
    ]
  },
  "anychart.graphics.vector.StrokeLineCap": {
    "constant": [
      "BUTT",
      "ROUND",
      "SQUARE"
    ]
  },
  "anychart.graphics.vector.ImageFillMode": {
    "constant": [
      "FIT",
      "FIT_MAX",
      "STRETCH",
      "TILE"
    ]
  },
  "anychart.graphics.vector.PaperSize": {
    "constant": [
      "A0",
      "A1",
      "A2",
      "A3",
      "A4",
      "A5",
      "A6",
      "US_LETTER"
    ]
  },
  "anychart.graphics.vector.Element": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Shape": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "strokeThickness (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Ellipse": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "center (opt_value) ",
      "centerX (opt_value) ",
      "centerY (opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "radiusX (opt_value) ",
      "radiusY (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRadius (rx, ry) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "strokeThickness (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Circle": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "center (opt_value) ",
      "centerX (opt_value) ",
      "centerY (opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "radius (opt_value) ",
      "radiusX (opt_value) ",
      "radiusY (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRadius (rx, ry) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "strokeThickness (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Clip": {
    "functions": [
      "dispose () ",
      "shape (opt_leftOrShape, opt_top, opt_width, opt_height) "
    ]
  },
  "anychart.graphics.vector.PathBase": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "strokeThickness (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Path": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "arcTo (rx, ry, fromAngle, extent) ",
      "arcToAsCurves (rx, ry, fromAngle, extent) ",
      "arcToByEndPoint (x, y, rx, ry, largeArc, clockwiseArc) ",
      "attr (key, opt_value) ",
      "circularArc (cx, cy, rx, ry, from, sweep, opt_lineTo) ",
      "clear () ",
      "clip (opt_value) ",
      "close () ",
      "cursor (opt_value) ",
      "curveTo (control1X, control1Y, control2X, control2Y, endX, endY, var_args) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getCurrentPoint () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "lineTo (x, y, var_args) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "moveTo (x, y) ",
      "parent (opt_value) ",
      "quadraticCurveTo (controlX, controlY, endX, endY, var_args) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "strokeThickness (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Layer": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clip (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "drag (opt_value) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getChildAt (index) ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hasParent () ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "numChildren () ",
      "parent (opt_value) ",
      "path () ",
      "pie (cx, cy, r, start, extent) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.PatternFill": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clip (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "drag (opt_value) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getChildAt (index) ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hasParent () ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "numChildren () ",
      "parent (opt_value) ",
      "path () ",
      "pie (cx, cy, r, start, extent) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.HatchFill": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clip (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "drag (opt_value) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getChildAt (index) ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hasParent () ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "numChildren () ",
      "parent (opt_value) ",
      "path () ",
      "pie (cx, cy, r, start, extent) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Image": {
    "functions": [
      "align (opt_value) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fittingMode (opt_value) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "height (opt_value) ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "src (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "width (opt_value) ",
      "x (opt_value) ",
      "y (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Rect": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "cut (radiusAllOrLeftTop, opt_radiusRightTop, opt_radiusRightBottom, opt_radiusLeftBottom) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "round (radiusAllOrLeftTop, opt_radiusRightTop, opt_radiusRightBottom, opt_radiusLeftBottom) ",
      "roundInner (radiusAllOrLeftTop, opt_radiusRightTop, opt_radiusRightBottom, opt_radiusLeftBottom) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setBounds (value) ",
      "setHeight (value) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "setWidth (value) ",
      "setX (value) ",
      "setY (value) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "strokeThickness (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.SimpleText": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "text (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.Text": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "color (opt_value) ",
      "cursor (opt_value) ",
      "decoration (opt_value) ",
      "desc (opt_value) ",
      "direction (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fontFamily (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hAlign (opt_value) ",
      "hasParent () ",
      "height (opt_value) ",
      "htmlText (opt_value) ",
      "id (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "opacity (opt_value) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "selectable (opt_value) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "style (opt_value) ",
      "text (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "vAlign (opt_value) ",
      "visible (opt_isVisible) ",
      "width (opt_value) ",
      "x (opt_value) ",
      "y (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.UnmanagedLayer": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "content (opt_value) ",
      "cursor (opt_value) ",
      "desc (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hasParent () ",
      "id (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "visible (opt_isVisible) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.vector.primitives": {
    "functions": [
      "cross (stageOrPath, centerX, centerY, outerRadius) ",
      "diagonalCross (stageOrPath, centerX, centerY, outerRadius) ",
      "diamond (stageOrPath, centerX, centerY, outerRadius) ",
      "donut (stageOrPath, cx, cy, outerR, innerR, start, sweep) ",
      "hLine (stageOrPath, centerX, centerY, outerRadius) ",
      "pie (stageOrPath, cx, cy, r, start, sweep) ",
      "roundedInnerRect (stageOrPath, rect, var_args) ",
      "roundedRect (stageOrPath, rect, var_args) ",
      "star (stageOrPath, centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "star10 (stageOrPath, centerX, centerY, outerRadius) ",
      "star4 (stageOrPath, centerX, centerY, outerRadius) ",
      "star5 (stageOrPath, centerX, centerY, outerRadius) ",
      "star6 (stageOrPath, centerX, centerY, outerRadius) ",
      "star7 (stageOrPath, centerX, centerY, outerRadius) ",
      "triangleDown (stageOrPath, centerX, centerY, outerRadius) ",
      "triangleLeft (stageOrPath, centerX, centerY, outerRadius) ",
      "triangleRight (stageOrPath, centerX, centerY, outerRadius) ",
      "triangleUp (stageOrPath, centerX, centerY, outerRadius) ",
      "truncatedRect (stageOrPath, rect, var_args) ",
      "vLine (stageOrPath, centerX, centerY, outerRadius) "
    ]
  },
  "anychart.graphics.vector.svg.Stage": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "asyncMode (opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clearDefs () ",
      "clip (opt_value) ",
      "container (opt_value) ",
      "createClip (opt_leftOrRect, opt_top, opt_width, opt_height) ",
      "credits (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "data (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getBounds () ",
      "getChildAt (index) ",
      "getContainerElement () ",
      "getDomWrapper () ",
      "getJpgBase64String (onSuccess, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccess, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPngBase64String (onSuccess, opt_onError, opt_width, opt_height, opt_quality) ",
      "getRotationAngle () ",
      "getStage () ",
      "getSvgBase64String (onSuccess, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getTransformationMatrix () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hatchFill (opt_type, opt_color, opt_thickness, opt_size) ",
      "height (opt_value) ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "isRendering () ",
      "isSuspended () ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxResizeDelay (opt_value) ",
      "numChildren () ",
      "parent () ",
      "path () ",
      "pattern (bounds) ",
      "pie (cx, cy, r, start, extent) ",
      "print (opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "resize (width, height) ",
      "resume (opt_force) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "saveAsJPG (opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJpg (opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsPDF (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPNG (opt_width, opt_height, opt_quality, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_width, opt_height, opt_quality, opt_filename) ",
      "saveAsSVG (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "shareAsJpg (onSuccess, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccess, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccess, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccess, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "star10 (centerX, centerY, outerRadius) ",
      "star4 (centerX, centerY, outerRadius) ",
      "star5 (centerX, centerY, outerRadius) ",
      "star6 (centerX, centerY, outerRadius) ",
      "star7 (centerX, centerY, outerRadius) ",
      "suspend () ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "toSvg (opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "width (opt_value) "
    ]
  },
  "anychart.graphics.vector.LinearGradient": {
    "functions": [
      "dispose () "
    ]
  },
  "anychart.graphics.vector.RadialGradient": {
    "functions": [
      "dispose () "
    ]
  },
  "anychart.graphics.vector.Stage": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "asyncMode (opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clearDefs () ",
      "clip (opt_value) ",
      "container (opt_value) ",
      "createClip (opt_leftOrRect, opt_top, opt_width, opt_height) ",
      "credits (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "data (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getBounds () ",
      "getChildAt (index) ",
      "getContainerElement () ",
      "getDomWrapper () ",
      "getJpgBase64String (onSuccess, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccess, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPngBase64String (onSuccess, opt_onError, opt_width, opt_height, opt_quality) ",
      "getRotationAngle () ",
      "getStage () ",
      "getSvgBase64String (onSuccess, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getTransformationMatrix () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hatchFill (opt_type, opt_color, opt_thickness, opt_size) ",
      "height (opt_value) ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "isRendering () ",
      "isSuspended () ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxResizeDelay (opt_value) ",
      "numChildren () ",
      "parent () ",
      "path () ",
      "pattern (bounds) ",
      "pie (cx, cy, r, start, extent) ",
      "print (opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "resize (width, height) ",
      "resume (opt_force) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "saveAsJPG (opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJpg (opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsPDF (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPNG (opt_width, opt_height, opt_quality, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_width, opt_height, opt_quality, opt_filename) ",
      "saveAsSVG (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "shareAsJpg (onSuccess, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccess, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccess, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccess, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "star10 (centerX, centerY, outerRadius) ",
      "star4 (centerX, centerY, outerRadius) ",
      "star5 (centerX, centerY, outerRadius) ",
      "star6 (centerX, centerY, outerRadius) ",
      "star7 (centerX, centerY, outerRadius) ",
      "suspend () ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "toSvg (opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "width (opt_value) "
    ]
  },
  "anychart.graphics.vector.vml.Clip": {
    "functions": [
      "dispose () ",
      "shape (opt_leftOrShape, opt_top, opt_width, opt_height) "
    ]
  },
  "anychart.graphics.vector.vml.RadialGradient": {
    "functions": [
      "dispose () "
    ]
  },
  "anychart.graphics.vector.vml.Stage": {
    "functions": [
      "addChild (element) ",
      "addChildAt (element, index) ",
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "asyncMode (opt_value) ",
      "circle (opt_cx, opt_cy, opt_radius) ",
      "clearDefs () ",
      "clip (opt_value) ",
      "container (opt_value) ",
      "createClip (opt_leftOrRect, opt_top, opt_width, opt_height) ",
      "credits (opt_value) ",
      "cross (centerX, centerY, outerRadius) ",
      "data (opt_value) ",
      "desc (opt_value) ",
      "diagonalCross (centerX, centerY, outerRadius) ",
      "diamond (centerX, centerY, outerRadius) ",
      "dispose () ",
      "domElement () ",
      "donut (cx, cy, outerR, innerR, start, extent) ",
      "ellipse (opt_cx, opt_cy, opt_rx, opt_ry) ",
      "forEachChild (callback, opt_this) ",
      "getBounds () ",
      "getChildAt (index) ",
      "getContainerElement () ",
      "getDomWrapper () ",
      "getJpgBase64String (onSuccess, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccess, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPngBase64String (onSuccess, opt_onError, opt_width, opt_height, opt_quality) ",
      "getRotationAngle () ",
      "getStage () ",
      "getSvgBase64String (onSuccess, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getTransformationMatrix () ",
      "getX () ",
      "getY () ",
      "hLine (centerX, centerY, outerRadius) ",
      "hasChild (element) ",
      "hatchFill (opt_type, opt_color, opt_thickness, opt_size) ",
      "height (opt_value) ",
      "html (opt_x, opt_y, opt_text, opt_style) ",
      "id (opt_value) ",
      "image (opt_src, opt_x, opt_y, opt_width, opt_height) ",
      "indexOfChild (element) ",
      "isRendering () ",
      "isSuspended () ",
      "layer () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxResizeDelay (opt_value) ",
      "numChildren () ",
      "parent () ",
      "path () ",
      "pattern (bounds) ",
      "pie (cx, cy, r, start, extent) ",
      "print (opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "rect (opt_x, opt_y, opt_width, opt_height) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "removeChild (element) ",
      "removeChildAt (index) ",
      "removeChildren () ",
      "resize (width, height) ",
      "resume (opt_force) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "roundedInnerRect (rect, var_args) ",
      "roundedRect (rect, var_args) ",
      "saveAsJPG (opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJpg (opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsPDF (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPNG (opt_width, opt_height, opt_quality, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_width, opt_height, opt_quality, opt_filename) ",
      "saveAsSVG (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "shareAsJpg (onSuccess, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccess, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccess, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccess, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "star (centerX, centerY, outerRadius, innerRadius, numberOfSpikes, opt_startDegrees, opt_curvature) ",
      "star10 (centerX, centerY, outerRadius) ",
      "star4 (centerX, centerY, outerRadius) ",
      "star5 (centerX, centerY, outerRadius) ",
      "star6 (centerX, centerY, outerRadius) ",
      "star7 (centerX, centerY, outerRadius) ",
      "suspend () ",
      "swapChildren (element1, element2) ",
      "swapChildrenAt (index1, index2) ",
      "text (opt_x, opt_y, opt_text, opt_style) ",
      "title (opt_value) ",
      "toSvg (opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "translate (tx, ty) ",
      "triangleDown (centerX, centerY, outerRadius) ",
      "triangleLeft (centerX, centerY, outerRadius) ",
      "triangleRight (centerX, centerY, outerRadius) ",
      "triangleUp (centerX, centerY, outerRadius) ",
      "truncatedRect (rect, var_args) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unmanagedLayer () ",
      "vLine (centerX, centerY, outerRadius) ",
      "visible (opt_isVisible) ",
      "width (opt_value) "
    ]
  },
  "anychart.graphics.vector.vml.Text": {
    "functions": [
      "appendTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "attr (key, opt_value) ",
      "clip (opt_value) ",
      "color (opt_value) ",
      "cursor (opt_value) ",
      "decoration (opt_value) ",
      "desc (opt_value) ",
      "direction (opt_value) ",
      "disablePointerEvents (opt_value) ",
      "disableStrokeScaling (opt_value) ",
      "dispose () ",
      "domElement () ",
      "drag (opt_value) ",
      "fontFamily (opt_value) ",
      "fontSize (opt_value) ",
      "fontStyle (opt_value) ",
      "fontVariant (opt_value) ",
      "fontWeight (opt_value) ",
      "getAbsoluteBounds () ",
      "getAbsoluteHeight () ",
      "getAbsoluteWidth () ",
      "getAbsoluteX () ",
      "getAbsoluteY () ",
      "getBounds () ",
      "getHeight () ",
      "getRotationAngle () ",
      "getStage () ",
      "getTransformationMatrix () ",
      "getWidth () ",
      "getX () ",
      "getY () ",
      "hAlign (opt_value) ",
      "hasParent () ",
      "height (opt_value) ",
      "htmlText (opt_value) ",
      "id (opt_value) ",
      "letterSpacing (opt_value) ",
      "lineHeight (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "opacity (opt_value) ",
      "parent (opt_value) ",
      "remove () ",
      "removeAllListeners (opt_type) ",
      "rotate (degrees, opt_cx, opt_cy) ",
      "rotateByAnchor (degrees, opt_anchor) ",
      "scale (sx, sy, opt_cx, opt_cy) ",
      "scaleByAnchor (sx, sy, opt_anchor) ",
      "selectable (opt_value) ",
      "setPosition (x, y) ",
      "setRotation (degrees, opt_cx, opt_cy) ",
      "setRotationByAnchor (degrees, opt_anchor) ",
      "setTransformationMatrix (m00, m10, m01, m11, m02, m12) ",
      "setTranslation (x, y) ",
      "style (opt_value) ",
      "text (opt_value) ",
      "textIndent (opt_value) ",
      "textOverflow (opt_value) ",
      "textWrap (opt_value) ",
      "title (opt_value) ",
      "translate (tx, ty) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "vAlign (opt_value) ",
      "visible (opt_isVisible) ",
      "width (opt_value) ",
      "x (opt_value) ",
      "y (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.graphics.events": {
    "functions": [
      "listen (src, type, listener, opt_capt, opt_handler) ",
      "listenOnce (src, type, listener, opt_capt, opt_handler) ",
      "removeAll (obj, opt_type) ",
      "unlisten (src, type, listener, opt_capt, opt_handler) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.graphics.events.EventType": {
    "constant": [
      "CLICK",
      "DBLCLICK",
      "DRAG",
      "DRAG_BEFORE",
      "DRAG_EARLY_CANCEL",
      "DRAG_END",
      "DRAG_START",
      "MOUSEDOWN",
      "MOUSEMOVE",
      "MOUSEOUT",
      "MOUSEOVER",
      "MOUSEUP",
      "RENDER_FINISH",
      "RENDER_START",
      "TAP",
      "TOUCHCANCEL",
      "TOUCHEND",
      "TOUCHMOVE",
      "TOUCHSTART"
    ]
  },
  "anychart.graphics.events.BrowserEvent": {
    "functions": [
      "preventDefault () ",
      "stopPropagation () ",
      "stopWrapperPropagation () "
    ]
  },
  "anychart.graphics.StageType": {
    "constant": [
      "SVG",
      "VML"
    ]
  },
  "anychart.SignalEvent": {
    "functions": [
      "targetBoundsChanged () ",
      "targetDataChanged () ",
      "targetMetaChanged () ",
      "targetNeedsReapplication () ",
      "targetNeedsRecalculation () ",
      "targetNeedsRedraw () "
    ]
  },
  "anychart.PointState": {
    "constant": [
      "HOVER",
      "NORMAL",
      "SELECT"
    ]
  },
  "anychart.format": {
    "functions": [
      "date (date, opt_timeZone, opt_locale) ",
      "dateTime (date, opt_format, opt_timeZone, opt_locale) ",
      "getDateTimeFormat (identifier, opt_index, opt_locale) ",
      "getDateTimeFormats (identifier, opt_locale) ",
      "getIntervalIdentifier (intervalUnit, opt_parentIntervalUnit, opt_prefix) ",
      "getMessage (keyword) ",
      "inputBaseDate (opt_value) ",
      "inputDateTimeFormat (opt_value) ",
      "inputLocale (opt_value) ",
      "number (number, opt_decimalsCountOrLocale, opt_decimalPoint, opt_groupsSeparator, opt_scale, opt_zeroFillDecimals, opt_scaleSuffixSeparator, opt_useBracketsForNegative) ",
      "outputDateFormat (opt_value) ",
      "outputDateTimeFormat (opt_value) ",
      "outputLocale (opt_value) ",
      "outputTimeFormat (opt_value) ",
      "outputTimezone (opt_value) ",
      "parseDateTime (value, opt_format, opt_baseDate, opt_locale) ",
      "parseNumber (value, opt_locale) ",
      "subs (str, var_args) ",
      "time (date, opt_timeZone, opt_locale) "
    ]
  },
  "anychart.format.Context": {
    "functions": [
      "getData (var_args) ",
      "getDataValue (name) ",
      "getMeta (name) ",
      "getSeriesMeta (name) ",
      "getStat (name) ",
      "getTokenType (name) ",
      "getTokenValue (name) "
    ]
  },
  "anychart.exports": {
    "functions": [
      "facebook (opt_captionOrOptions, opt_link, opt_name, opt_description, opt_width, opt_height, opt_appId) ",
      "filename (opt_value) ",
      "image (opt_widthOrOptions, opt_height) ",
      "linkedin (opt_captionOrOptions, opt_description, opt_width, opt_height) ",
      "pinterest (opt_linkOrOptions, opt_description, opt_width, opt_height) ",
      "server (opt_address) ",
      "twitter (opt_urlOrOptions, opt_width, opt_height) "
    ]
  },
  "anychart.scales": {
    "functions": [
      "calendar (opt_parentCalendar) ",
      "dateTime () ",
      "linear () ",
      "linearColor (var_args) ",
      "log () ",
      "ordinal () ",
      "ordinalColor (opt_value) "
    ]
  },
  "anychart.scales.Base": {
    "functions": [
      "dispose () ",
      "finishAutoCalc (opt_silently) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "startAutoCalc () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.DateTimeTicks": {
    "functions": [
      "count (opt_value) ",
      "dispose () ",
      "get () ",
      "interval (opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "set (ticks) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.ScatterBase": {
    "functions": [
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxTicksCount (opt_value) ",
      "maximum (opt_value) ",
      "minimum (opt_value) ",
      "removeAllListeners (opt_type) ",
      "startAutoCalc () ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.DateTime": {
    "functions": [
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "getType () ",
      "inverseTransform (ratio) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxTicksCount (opt_value) ",
      "maximum (opt_value) ",
      "maximumGap (opt_value) ",
      "minimum (opt_value) ",
      "minimumGap (opt_value) ",
      "minorTicks (opt_value) ",
      "removeAllListeners (opt_type) ",
      "softMaximum (opt_value) ",
      "softMinimum (opt_value) ",
      "startAutoCalc () ",
      "ticks (opt_value) ",
      "transform (value, opt_subRangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.ScatterTicks": {
    "functions": [
      "base (opt_value) ",
      "count (opt_valueOrMinValue, opt_maxValue) ",
      "dispose () ",
      "get () ",
      "interval (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "mode (opt_value) ",
      "removeAllListeners (opt_type) ",
      "set (ticks) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.Linear": {
    "functions": [
      "compareWith (opt_value) ",
      "comparisonMode (opt_value) ",
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "getType () ",
      "inverseTransform (ratio) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxTicksCount (opt_value) ",
      "maximum (opt_value) ",
      "maximumGap (opt_value) ",
      "minimum (opt_value) ",
      "minimumGap (opt_value) ",
      "minorTicks (opt_value) ",
      "removeAllListeners (opt_type) ",
      "softMaximum (opt_value) ",
      "softMinimum (opt_value) ",
      "stackMode (opt_value) ",
      "startAutoCalc () ",
      "stickToZero (opt_value) ",
      "ticks (opt_value) ",
      "transform (value, opt_subRangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.OrdinalTicks": {
    "functions": [
      "dispose () ",
      "get () ",
      "interval (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxCount (opt_value) ",
      "names (opt_values) ",
      "removeAllListeners (opt_type) ",
      "set (ticks) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.Ordinal": {
    "functions": [
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "getType () ",
      "inverseTransform (ratio) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "names (opt_value) ",
      "removeAllListeners (opt_type) ",
      "startAutoCalc () ",
      "ticks (opt_value) ",
      "transform (value, opt_subRangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "values (opt_values, var_args) ",
      "weights (opt_value) "
    ]
  },
  "anychart.scales.LinearColor": {
    "functions": [
      "colorToValue (value) ",
      "colors (var_args) ",
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxTicksCount (opt_value) ",
      "maximum (opt_value) ",
      "minimum (opt_value) ",
      "minorTicks (opt_value) ",
      "removeAllListeners (opt_type) ",
      "startAutoCalc () ",
      "ticks (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueToColor (value) "
    ]
  },
  "anychart.scales.OrdinalColorTicks": {
    "functions": [
      "dispose () ",
      "get () ",
      "interval (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxCount (opt_value) ",
      "names (opt_values) ",
      "removeAllListeners (opt_type) ",
      "set (ticks) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.OrdinalColor": {
    "functions": [
      "colorToValue (value) ",
      "colors (opt_value) ",
      "dispose () ",
      "finishAutoCalc (opt_silently) ",
      "getIndexByValue (value) ",
      "getProcessedRanges () ",
      "getRangeByValue (value) ",
      "getType () ",
      "inverseTransform (ratio) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "names (opt_value) ",
      "ranges (opt_value) ",
      "removeAllListeners (opt_type) ",
      "startAutoCalc () ",
      "ticks (opt_value) ",
      "transform (value, opt_subRangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "valueToColor (value) "
    ]
  },
  "anychart.scales.GanttDateTime": {
    "functions": [
      "dispose () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maximum (opt_value) ",
      "maximumGap (opt_value) ",
      "minimum (opt_value) ",
      "minimumGap (opt_value) ",
      "removeAllListeners (opt_type) ",
      "softMaximum (opt_value) ",
      "softMinimum (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.Calendar": {
    "functions": [
      "availabilities (opt_value) ",
      "dispose () ",
      "getWorkingSchedule (startDate, endDate, opt_unit, opt_count) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "timezoneOffset (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "weekendRange (opt_value) "
    ]
  },
  "anychart.scales.Logarithmic": {
    "functions": [
      "compareWith (opt_value) ",
      "comparisonMode (opt_value) ",
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "getType () ",
      "inverseTransform (ratio) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "logBase (opt_value) ",
      "maxTicksCount (opt_value) ",
      "maximum (opt_value) ",
      "maximumGap (opt_value) ",
      "minimum (opt_value) ",
      "minimumGap (opt_value) ",
      "minorTicks (opt_value) ",
      "removeAllListeners (opt_type) ",
      "softMaximum (opt_value) ",
      "softMinimum (opt_value) ",
      "stackMode (opt_value) ",
      "startAutoCalc () ",
      "stickToZero (opt_value) ",
      "ticks (opt_value) ",
      "transform (value, opt_subRangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.DateTimeWithCalendar": {
    "functions": [
      "calendar (opt_value) ",
      "count (opt_value) ",
      "dateToPix (date) ",
      "dispose () ",
      "extendDataRange (var_args) ",
      "finishAutoCalc (opt_silently) ",
      "getTicks (fromPix, toPix, opt_unit, opt_count) ",
      "inverted (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxTicksCount (opt_value) ",
      "maximum (opt_value) ",
      "maximumGap (opt_value) ",
      "minimum (opt_value) ",
      "minimumGap (opt_value) ",
      "pixToDate (pix) ",
      "removeAllListeners (opt_type) ",
      "skipHolidays (opt_value) ",
      "softMaximum (opt_value) ",
      "softMinimum (opt_value) ",
      "startAutoCalc () ",
      "startDate (opt_value) ",
      "unit (opt_value) ",
      "unitPixSize (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.GeoTicks": {
    "functions": [
      "count (opt_valueOrMinValue, opt_maxValue) ",
      "dispose () ",
      "get () ",
      "interval (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "set (ticks) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.Geo": {
    "functions": [
      "dispose () ",
      "extendDataRange (var_args) ",
      "gap (opt_value) ",
      "getType () ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "maxTicksCount (opt_value) ",
      "maximumX (opt_value) ",
      "maximumY (opt_value) ",
      "minimumX (opt_value) ",
      "minimumY (opt_value) ",
      "precision (opt_precisionOrXPrecision, opt_yPrecision) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "xMinorTicks (opt_value) ",
      "xTicks (opt_value) ",
      "yMinorTicks (opt_value) ",
      "yTicks (opt_value) "
    ]
  },
  "anychart.scales.StockScatterDateTime": {
    "functions": [
      "dispose () ",
      "getFullMaximum () ",
      "getFullMinimum () ",
      "getGroupingUnit () ",
      "getGroupingUnitCount () ",
      "getMaximum () ",
      "getMinimum () ",
      "inverseTransform (ratio) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "transform (value, opt_subrangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.scales.StockOrdinalDateTime": {
    "functions": [
      "dispose () ",
      "getFullMaximum () ",
      "getFullMinimum () ",
      "getGroupingUnit () ",
      "getGroupingUnitCount () ",
      "getMaximum () ",
      "getMinimum () ",
      "inverseTransform (ratio) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "transform (value, opt_subrangeRatio) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.palettes": {
    "functions": [
      "distinctColors (opt_value, var_args) ",
      "hatchFills (opt_value, var_args) ",
      "markers (opt_value, var_args) ",
      "rangeColors (opt_value, var_args) "
    ],
    "properties": [
      "blue",
      "coffee",
      "defaultPalette",
      "earth",
      "glamour",
      "monochrome",
      "morning",
      "pastel",
      "provence",
      "sea",
      "turquoise",
      "v6",
      "wines"
    ]
  },
  "anychart.palettes.DistinctColors": {
    "functions": [
      "colorAt (index, opt_color) ",
      "colors (opt_value, var_args) ",
      "dispose () ",
      "itemAt (index, opt_item) ",
      "items (opt_value, var_args) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.palettes.HatchFills": {
    "functions": [
      "dispose () ",
      "hatchFillAt (index, opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hatchFills (opt_hatchFills, var_args) ",
      "itemAt (index, opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "items (opt_hatchFills, var_args) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.palettes.Markers": {
    "functions": [
      "dispose () ",
      "itemAt (index, opt_item) ",
      "items (opt_items, var_args) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "markerAt (index, opt_marker) ",
      "markers (opt_markers, var_args) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.palettes.RangeColors": {
    "functions": [
      "colorAt (index, opt_color) ",
      "colors (opt_value, var_args) ",
      "count (opt_value) ",
      "dispose () ",
      "itemAt (index, opt_item) ",
      "items (opt_value, var_args) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "removeAllListeners (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) "
    ]
  },
  "anychart.charts.Bullet": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "axis (opt_value) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "isHorizontal () ",
      "label (opt_indexOrValue, opt_value) ",
      "layout (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "range (opt_indexOrValue, opt_value) ",
      "rangePalette (opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "scale (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Cartesian": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_annotationsList) ",
      "background (opt_value) ",
      "barGroupsPadding (opt_value) ",
      "barsPadding (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXAxesCount () ",
      "getXScales () ",
      "getYAxesCount () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxBubbleSize (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minBubbleSize (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "xScroller (opt_value) ",
      "xZoom (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zAngle (opt_value) ",
      "zAspect (opt_value) ",
      "zDepth (opt_value) ",
      "zDistribution (opt_value) ",
      "zIndex (opt_value) ",
      "zPadding (opt_value) "
    ]
  },
  "anychart.charts.Pareto": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_annotationsList) ",
      "background (opt_value) ",
      "barGroupsPadding (opt_value) ",
      "barsPadding (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXAxesCount () ",
      "getXScales () ",
      "getYAxesCount () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxBubbleSize (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minBubbleSize (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "xScroller (opt_value) ",
      "xZoom (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Waterfall": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_annotationsList) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "data (opt_value) ",
      "dataMode (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXAxesCount () ",
      "getXScales () ",
      "getYAxesCount () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "xScroller (opt_value) ",
      "xZoom (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Cartesian3d": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "barGroupsPadding (opt_value) ",
      "barsPadding (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXAxesCount () ",
      "getXScales () ",
      "getYAxesCount () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "xScroller (opt_value) ",
      "xZoom (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zAngle (opt_value) ",
      "zAspect (opt_value) ",
      "zDepth (opt_value) ",
      "zDistribution (opt_value) ",
      "zIndex (opt_value) ",
      "zPadding (opt_value) "
    ]
  },
  "anychart.charts.Funnel": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "baseWidth (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "connectorLength (opt_value) ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getPoint (index) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hover (opt_indexOrIndexes) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabels (opt_value) ",
      "hoverMarkers (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "neckHeight (opt_value) ",
      "neckWidth (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "pointsPadding (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "select (opt_indexOrIndexes) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabels (opt_value) ",
      "selectMarkers (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.CircularGauge": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "axis (opt_indexOrValue, opt_value) ",
      "background (opt_value) ",
      "bar (opt_indexOrValue, opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "cap (opt_value) ",
      "circularPadding (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "encloseWithStraightLine (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "knob (opt_indexOrValue, opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "marker (opt_indexOrValue, opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "needle (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "range (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startAngle (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "sweepAngle (opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.LinearGauge": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addPointer (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "axis (opt_indexOrValue, opt_value) ",
      "background (opt_value) ",
      "bar (dataIndex) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "defaultPointerType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getPointer (id) ",
      "getPointerAt (index) ",
      "getPointersCount () ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalOffset (opt_value) ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "isVertical () ",
      "label (opt_indexOrValue, opt_value) ",
      "layout (opt_value) ",
      "led (dataIndex) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "marker (dataIndex) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeBar (dataIndex) ",
      "removeAllListeners (opt_type) ",
      "removeAllPointers () ",
      "removePointer (id) ",
      "removePointerAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "scale (opt_value) ",
      "scaleBar (opt_indexOrValue, opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "tank (dataIndex) ",
      "thermometer (dataIndex) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.HeatMap": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_annotationsList) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "colorScale (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "height (opt_value) ",
      "hover (opt_indexOrIndexes) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "labelsDisplayMode (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "select (opt_indexOrIndexes) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "xScroller (opt_value) ",
      "xZoom (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "yScroller (opt_value) ",
      "yZoom (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Mekko": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_annotationsList) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXAxesCount () ",
      "getYAxesCount () ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "pointsPadding (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Pie": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "connectorLength (opt_value) ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "explode (opt_value) ",
      "explodeSlice (index, opt_explode) ",
      "explodeSlices (value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "forceHoverLabels (opt_value) ",
      "getCenterPoint () ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPixelExplode () ",
      "getPixelInnerRadius () ",
      "getPixelRadius () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getPoint (index) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "group (opt_value) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hover (opt_indexOrIndexes) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabels (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "id (opt_value) ",
      "inMarquee () ",
      "innerRadius (opt_value) ",
      "insideLabelsOffset (opt_value) ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "outsideLabelsCriticalAngle (opt_value) ",
      "outsideLabelsSpace (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "radius (opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "sort (opt_value) ",
      "startAngle (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Polar": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "barGroupsPadding (opt_value) ",
      "barsPadding (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXScales () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "innerRadius (opt_value) ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "sortPointsByX (opt_value) ",
      "startAngle (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_value) ",
      "xScale (opt_value) ",
      "yAxis (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Pyramid": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "baseWidth (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "connectorLength (opt_value) ",
      "connectorStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getPoint (index) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hover (opt_indexOrIndexes) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverLabels (opt_value) ",
      "hoverMarkers (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "pointsPadding (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "reversed (opt_value) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "select (opt_indexOrIndexes) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabels (opt_value) ",
      "selectMarkers (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Radar": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXScales () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "innerRadius (opt_value) ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startAngle (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_value) ",
      "xScale (opt_value) ",
      "yAxis (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Scatter": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_annotationsList) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "crossing (opt_value) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getXScales () ",
      "getYScales () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_indexOrValue, opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxBubbleSize (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minBubbleSize (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "minorGrid (opt_indexOrValue, opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "quarters (opt_value) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xAxis (opt_indexOrValue, opt_value) ",
      "xScale (opt_value) ",
      "yAxis (opt_indexOrValue, opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Sparkline": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "clip (opt_value) ",
      "connectMissingPoints (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "firstFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "firstHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "firstLabels (opt_value) ",
      "firstMarkers (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "lastFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "lastHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "lastLabels (opt_value) ",
      "lastMarkers (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "lineMarker (opt_indexOrValue, opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markers (opt_value) ",
      "maxFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "maxHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "maxHeight (opt_value) ",
      "maxLabels (opt_value) ",
      "maxMarkers (opt_value) ",
      "maxWidth (opt_value) ",
      "minFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "minHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "minHeight (opt_value) ",
      "minLabels (opt_value) ",
      "minMarkers (opt_value) ",
      "minWidth (opt_value) ",
      "negativeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "negativeHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "negativeLabels (opt_value) ",
      "negativeMarkers (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "pointWidth (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "rangeMarker (opt_indexOrValue, opt_value) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "textMarker (opt_indexOrValue, opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "type (opt_type) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xScale (opt_value) ",
      "yScale (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.TagCloud": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "angles (opt_value) ",
      "anglesCount () ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "colorRange (opt_value) ",
      "colorScale (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_settings) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "fromAngle () ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getPoint (index) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "hover (index) ",
      "hovered (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "mode () ",
      "normal (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "scale (opt_value) ",
      "select (indexOrIndexes, opt_event) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selected (opt_value) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "textSpacing () ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toAngle () ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.TreeMap": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "colorRange (opt_value) ",
      "colorScale (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_fillMethod) ",
      "dispose () ",
      "draw (opt_async) ",
      "drillTo (target) ",
      "drillUp () ",
      "enabled (opt_value) ",
      "fill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "getDrilldownPath () ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "headers (opt_value) ",
      "headersDisplayMode (opt_value) ",
      "height (opt_value) ",
      "hintDepth (opt_value) ",
      "hintOpacity (opt_value) ",
      "hoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "hoverHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "hoverHeaders (opt_value) ",
      "hoverLabels (opt_value) ",
      "hoverMarkers (opt_value) ",
      "hoverMode (opt_value) ",
      "hoverStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markers (opt_value) ",
      "maxDepth (opt_value) ",
      "maxHeadersHeight (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectHatchFill (opt_patternFillOrTypeOrState, opt_color, opt_thickness, opt_size) ",
      "selectLabels (opt_value) ",
      "selectMarkers (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectionMode (opt_value) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "sort (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "stroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Venn": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "dataSeparator () ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "fill () ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "hatchFill () ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hover (opt_indexOrIndexes) ",
      "hoverFill () ",
      "hoverHatchFill () ",
      "hoverLabels (opt_value) ",
      "hoverMarkers (opt_value) ",
      "hoverStroke () ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "intersections (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "markers (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "select (opt_indexOrIndexes) ",
      "selectFill () ",
      "selectHatchFill () ",
      "selectLabels (opt_value) ",
      "selectMarkers (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectStroke () ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "stroke () ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_indexOrIndexes) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_indexOrIndexes) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Gantt": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "collapseAll () ",
      "collapseTask (taskId) ",
      "columnStroke (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "data (opt_value, opt_fillMethod) ",
      "dataGrid (opt_enabled) ",
      "defaultRowHeight (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "editing (opt_value) ",
      "enabled (opt_value) ",
      "expandAll () ",
      "expandTask (taskId) ",
      "fitAll () ",
      "fitToTask (taskId) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getTimeline () ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "headerHeight (opt_value) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "rowHoverFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowSelectedFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "rowStroke (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "scrollTo (pxOffset) ",
      "scrollToEnd (opt_index) ",
      "scrollToRow (rowIndex) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "splitterPosition (opt_value) ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xScale (opt_value) ",
      "zIndex (opt_value) ",
      "zoomIn (opt_zoomFactor) ",
      "zoomOut (opt_zoomFactor) ",
      "zoomTo (startOrUnit, opt_endOrCount, opt_anchor) "
    ]
  },
  "anychart.charts.Pert": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "criticalPath (opt_value) ",
      "data (opt_data, opt_fillMethod, opt_deps) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "expectedTimeCalculator (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "height (opt_value) ",
      "horizontalSpacing (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "milestones (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "tasks (opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "verticalSpacing (opt_value) ",
      "width (opt_value) ",
      "zIndex (opt_value) "
    ]
  },
  "anychart.charts.Resource": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "activities (opt_value) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "calendar (opt_value) ",
      "cancelMarquee () ",
      "cellPadding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "conflicts (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "currentStartDate (opt_value) ",
      "data (opt_value, opt_csvSettings) ",
      "defaultMinutesPerDay (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "grid (opt_value) ",
      "height (opt_value) ",
      "horizontalScrollBar (opt_value) ",
      "hover (resourceIndex, activityIndex) ",
      "hoverPoint (globalIndex) ",
      "id (opt_value) ",
      "inMarquee () ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "logo (opt_value) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minRowHeight (opt_value) ",
      "minWidth (opt_value) ",
      "overlay (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "pixPerHour (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "resourceList (opt_value) ",
      "resourceListWidth (opt_value) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "select (resourceIndex, activityIndex) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectPoint (globalIndex, opt_event) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "splitterStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "startSelectMarquee (opt_repeat) ",
      "timeLine (opt_value) ",
      "timeLineHeight (opt_value) ",
      "timeTrackingMode (opt_value) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unhover (opt_resourceIndex, opt_activityIndex) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "unselect (opt_resourceIndex, opt_activityIndex) ",
      "verticalScrollBar (opt_value) ",
      "width (opt_value) ",
      "xScale (opt_value) ",
      "zIndex (opt_value) ",
      "zoomLevel (opt_indexOrId) ",
      "zoomLevels (opt_value) "
    ]
  },
  "anychart.charts.Map": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "addSeries (var_args) ",
      "allowPointsSelect (opt_value) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "axes (opt_value) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "callout (opt_indexOrValue, opt_value) ",
      "cancelMarquee () ",
      "colorRange (opt_value) ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "crosshair (opt_value) ",
      "crs (opt_value) ",
      "crsAnimation (opt_enabledOrJson, opt_duration) ",
      "defaultSeriesType (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "drillDownMap (opt_value) ",
      "drillTo (id, opt_map) ",
      "drillUp () ",
      "enabled (opt_value) ",
      "featureCrs (id, opt_crs) ",
      "featureScaleFactor (id, opt_ratio) ",
      "featureTranslation (id, opt_dx, opt_dy) ",
      "fitAll () ",
      "geoData (opt_data) ",
      "geoIdField (opt_value) ",
      "getCurrentScene () ",
      "getDrilldownPath () ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotBounds () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSeries (id) ",
      "getSeriesAt (index) ",
      "getSeriesCount () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "getZoomLevel () ",
      "globalToLocal (xCoord, yCoord) ",
      "grids (opt_value) ",
      "hatchFillPalette (opt_value) ",
      "height (opt_value) ",
      "hoverLabels (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "inverseTransform (x, y) ",
      "label (opt_indexOrValue, opt_value) ",
      "labels (opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "markerPalette (opt_value) ",
      "maxBubbleSize (opt_value) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "maxZoomLevel (opt_value) ",
      "minBubbleSize (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "move (dx, dy) ",
      "overlapMode (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "palette (opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "removeAllSeries () ",
      "removeSeries (id) ",
      "removeSeriesAt (index) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "selectLabels (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toGeoJSON () ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "transform (xLong, yLat) ",
      "translateFeature (id, dx, dy) ",
      "unboundRegions (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "zIndex (opt_value) ",
      "zoom (value, opt_cx, opt_cy, opt_duration) ",
      "zoomIn (opt_duration) ",
      "zoomOut (opt_duration) ",
      "zoomTo (value, opt_cx, opt_cy, opt_duration) ",
      "zoomToFeature (id, opt_duration) "
    ]
  },
  "anychart.charts.Stock": {
    "functions": [
      "a11y (opt_enabledOrJson) ",
      "animation (opt_enabledOrJson, opt_duration) ",
      "annotations (opt_value) ",
      "background (opt_value) ",
      "bottom (opt_value) ",
      "bounds (opt_boundsOrX, opt_y, opt_width, opt_height) ",
      "cancelMarquee () ",
      "container (opt_value) ",
      "contextMenu (opt_value) ",
      "credits (opt_value) ",
      "dispose () ",
      "draw (opt_async) ",
      "enabled (opt_value) ",
      "getJpgBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality, opt_forceTransparentWhite) ",
      "getPdfBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y) ",
      "getPixelBounds () ",
      "getPlotsCount () ",
      "getPngBase64String (onSuccessOrOptions, opt_onError, opt_width, opt_height, opt_quality) ",
      "getSelectedPoints () ",
      "getSelectedRange () ",
      "getStat (key) ",
      "getSvgBase64String (onSuccessOrOptions, opt_onError, opt_paperSizeOrWidth, opt_landscapeOrHeight) ",
      "getType () ",
      "globalToLocal (xCoord, yCoord) ",
      "grouping (opt_value) ",
      "height (opt_value) ",
      "id (opt_value) ",
      "inMarquee () ",
      "interactivity (opt_value) ",
      "label (opt_indexOrValue, opt_value) ",
      "left (opt_value) ",
      "legend (opt_value) ",
      "listen (type, listener, opt_useCapture, opt_listenerScope) ",
      "listenOnce (type, listener, opt_useCapture, opt_listenerScope) ",
      "localToGlobal (xCoord, yCoord) ",
      "margin (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "maxHeight (opt_value) ",
      "maxWidth (opt_value) ",
      "minHeight (opt_value) ",
      "minWidth (opt_value) ",
      "padding (opt_spaceOrTopOrTopAndBottom, opt_rightOrRightAndLeft, opt_bottom, opt_left) ",
      "plot (opt_indexOrValue, opt_value) ",
      "print (opt_paperSizeOrOptions, opt_landscape) ",
      "removeAllListeners (opt_type) ",
      "right (opt_value) ",
      "saveAsCsv (opt_chartDataExportMode, opt_csvSettings, opt_filename) ",
      "saveAsJpg (opt_widthOrOptions, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "saveAsJson (opt_includeTheme, opt_filename) ",
      "saveAsPdf (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "saveAsPng (opt_widthOrOptions, opt_height, opt_quality, opt_filename) ",
      "saveAsSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight, opt_filename) ",
      "saveAsXlsx (opt_chartDataExportMode, opt_filename) ",
      "saveAsXml (opt_includeTheme, opt_filename) ",
      "scroller (opt_value) ",
      "scrollerGrouping (opt_value) ",
      "selectMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "selectMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) ",
      "selectRange (typeOrUnitOrStart, opt_endOrCountOrDispatchEvent, opt_anchorOrDispatchEvent, opt_dispatchEvent) ",
      "shareAsJpg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_forceTransparentWhite, opt_filename) ",
      "shareAsPdf (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_x, opt_y, opt_filename) ",
      "shareAsPng (onSuccessOrOptions, opt_onError, opt_asBase64, opt_width, opt_height, opt_quality, opt_filename) ",
      "shareAsSvg (onSuccessOrOptions, opt_onError, opt_asBase64, opt_paperSizeOrWidth, opt_landscapeOrHeight, opt_filename) ",
      "shareWithFacebook (opt_captionOrOptions, opt_link, opt_name, opt_description) ",
      "shareWithLinkedIn (opt_captionOrOptions, opt_description) ",
      "shareWithPinterest (opt_linkOrOptions, opt_description) ",
      "shareWithTwitter () ",
      "startSelectMarquee (opt_repeat) ",
      "startZoomMarquee (opt_repeat, opt_asRect) ",
      "title (opt_value) ",
      "toA11yTable (opt_title, opt_asString) ",
      "toCsv (opt_chartDataExportMode, opt_csvSettings) ",
      "toHtmlTable (opt_title, opt_asString) ",
      "toJson (opt_stringify, opt_includeTheme) ",
      "toSvg (opt_paperSizeOrWidthOrOptions, opt_landscapeOrHeight) ",
      "toXml (opt_asXmlNode, opt_includeTheme) ",
      "tooltip (opt_value) ",
      "top (opt_value) ",
      "unlisten (type, listener, opt_useCapture, opt_listenerScope) ",
      "unlistenByKey (key) ",
      "width (opt_value) ",
      "xScale (opt_value) ",
      "zIndex (opt_value) ",
      "zoomMarqueeFill (opt_fillOrColorOrKeys, opt_opacityOrAngleOrCx, opt_modeOrCy, opt_opacityOrMode, opt_opacity, opt_fx, opt_fy) ",
      "zoomMarqueeStroke (opt_strokeOrFill, opt_thickness, opt_dashpattern, opt_lineJoin, opt_lineCap) "
    ]
  },
  "anychart.calculations": {
    "functions": [
      "cycledQueue (opt_lengthLimit) "
    ]
  }
}
